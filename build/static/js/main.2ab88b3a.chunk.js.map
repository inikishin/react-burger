{"version":3,"sources":["components/burger-ingredients/ingredient.module.css","components/modal-overlay/model-overlay.module.css","types/hooks.ts","components/burger-ingredients/ingredient.tsx","utils/cookies.ts","services/handleApi.ts","services/actions/ingredients.ts","components/burger-ingredients/burger-ingredients.tsx","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/actions/order.ts","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","services/actions/auth.ts","components/login/login.tsx","pages/login.tsx","components/register/register.tsx","pages/register.tsx","components/forgot-password/forgot-password.tsx","pages/forgot-password.tsx","components/reset-password/reset-password.tsx","pages/reset-password.tsx","components/profile/profile-menu.tsx","components/profile/profile-settings.tsx","components/profile/profile.tsx","pages/profile.tsx","pages/not-found-404.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","components/protected-route/protected-route.tsx","components/app-header/app-header.tsx","services/handleData.ts","components/feed-order/feed-order.tsx","components/feed/feed.tsx","components/feed/feed-total.tsx","components/feed/feed-orders-status.tsx","services/actions/feed.ts","pages/feed.tsx","components/order-info/order-info.tsx","pages/order-info.tsx","components/profile/profile-orders-feed.tsx","components/profile/profile-orders.tsx","pages/profile-orders.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/ingredients.ts","services/reducers/order.ts","services/reducers/auth.ts","services/reducers/feed.ts","services/reducers/index.ts","index.tsx","services/middleware/socketMiddleware.ts","components/burger-constructor/burger-constructor.module.css","components/profile/profile-menu.module.css","components/app/app.module.css","components/feed/feed-orders-status.module.css","components/ingredient-details/ingredient-details.module.css","components/order-info/order-info.module.css","components/profile/profile.module.css","components/login/login.module.css","components/register/register.module.css","components/app-header/app-header.module.css","components/reset-password/reset-password.module.css","components/profile/profile-settings.module.css","components/burger-ingredients/burger-ingredients.module.css","components/modal/modal.module.css","components/forgot-password/forgot-password.module.css","components/feed-order/feed-order.module.css","pages/not-found-404.module.css","components/order-details/order-details.module.css","components/feed/feed.module.css","components/profile/profile-orders-feed.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","Ingredient","props","useDrag","type","item","ingredient","collect","monitor","isDrag","isDragging","dragRef","className","style","container","ref","src","image","alt","name","count","size","price","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","getIngredientRequest","a","fetch","getOrderNumberRequest","ingredientsIds","method","headers","Authorization","body","JSON","stringify","ingredients","loginRequest","form","mode","cache","credentials","redirect","referrerPolicy","registerRequest","refreshTokenRequest","refreshToken","getUserRequest","setUserRequest","logoutRequest","passwordReset","passwordResetReset","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_INGREDIENT_DATA","DELETE_INGREDIENT_DATA","INCREASE_INGREDIENT_COUNTER","DECSEASE_INGREDIENT_COUNTER","getIngredients","dispatch","then","res","ok","json","Promise","reject","status","apiData","data","Error","catch","e","BurgerIngredients","location","useLocation","React","useState","currentTab","setCurrentTab","store","isLoadingIngredients","useInView","refBun","inViewBun","refSauce","inViewSauce","refMain","inViewMain","setCurrent","currentValue","window","href","useEffect","flexBasis","width","display","active","onClick","id","filter","x","map","index","to","pathname","_id","state","background","ingredientLink","counter","OrderDetails","bodyContent","orderNumber","secondaryText","ModalOverlay","modal","onClose","children","modalRoot","getElementById","Modal","onCloseModal","target","currentTarget","key","stopPropagation","keyUpHandler","addEventListener","removeEventListener","ReactDOM","createPortal","title","modalContent","modalHeader","close","modalMain","GET_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_FAILED","ADD_INGREDIENT_TO_BURGER","CHANGE_INGREDIENT_IN_BURGER","DELETE_INGREDIENT_FROM_BURGER","ConstructorElementCusomized","useDrop","accept","isOver","dropRef","change","setCurrentIndex","mainItem","isLocked","text","thumbnail","handleClose","ingredientIndex","ingredientId","BurgerConstructor","modalVisible","setModalVisible","currentIndex","order","currentBurger","auth","bun","main","drop","oldIndex","onDropHandler","dropTarget","isLoadingOrderNumber","number","toString","bunItem","emptyItems","length","itemList","ingr","orderFooter","total","isAuthenticated","push","forEach","console","log","getOrderNumber","HomePage","app","sectionHeader","mainDashboard","DndProvider","backend","HTML5Backend","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","SET_USER_REQUEST","SET_USER_SUCCESS","SET_USER_FAILED","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","SET_NEW_PASSWORD_REQUEST","SET_NEW_PASSWORD_SUCCESS","SET_NEW_PASSWORD_FAILED","getUser","user","error","Login","email","password","setValue","onChange","login","useCallback","preventDefault","accessToken","loginAuth","from","styles","wrapper","onSubmit","inputContainer","placeholder","navLinks","LoginPage","Register","register","registerAuth","RegisterPage","ForgotPassword","history","useHistory","reset","resetPasswordRequest","resetPasswordAuth","ForgotPasswordPage","ResetPassword","token","resetNewPassword","resetSetNewPassword","hasError","ResetPasswordPage","ProfileMenu","logout","menuWrapper","profileMenu","profileMenuItem","link","activeClassName","linkActive","ProfileSettings","nameInput","useRef","emailInput","cancelUser","current","settingsWrapper","setUserAttributes","icon","buttonsBlock","Profile","profileContainer","profileWrapper","ProfilePage","NotFound404","IngredientDetails","useParams","image_large","details","calories","proteins","fat","carbohydrates","IngredientPage","ProtectedRoute","rest","isUserLoaded","setUserLoaded","init","render","AppHeader","header","nav","navItem","convertOrderDate","date","newDate","delta","getDate","toLocaleTimeString","timeZone","timeZoneName","hour","minute","getReadableStatus","FeedOrder","orderIngredients","indexOf","orderTotal","reduce","previousValue","currentItem","orderHeader","createdAt","image_mobile","ingredientPreview","Feed","ordersList","orders","orderLink","FeedTotal","FeedOrdersStatus","pendingOrders","slice","doneOrders","containerWrapper","statusContainer","ordersListOneColumn","ordersListTwoColumn","ordersDone","ordersWork","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","FeedPage","feed","totalToday","sectionColumn","OrderInfo","payload","find","ingredientsWrapper","ingredientWrapper","OrderInfoPage","justifyContent","ProfileOrdersFeed","ProfileOrders","feedWrapper","ProfileOrdersPage","ModalSwitch","action","closeModal","goBack","modalIngredientDetails","modalOrderInfo","path","exact","App","tokenExpired","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","hasErrorIngredients","currentIngredient","hasErrorOrderNumber","isLoading","wsConnected","messages","rootReducer","combineReducers","updatedIngredients","itemIndex","findIndex","splice","newState","uuidv4","updatedConstructor","updatedMain","newMain","split","enhancer","composeWithDevTools","applyMiddleware","thunk","socket","next","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","onclose","send","createStore","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,gC,oBCA9BD,EAAOC,QAAU,CAAC,MAAQ,+B,4LCObC,EAAgDC,IAChDC,EAAc,kBAAMC,e,iDC4BlBC,MArBf,SAAoBC,GAChB,MAA4BC,YAAQ,CAChCC,KAAM,aACNC,KAAK,eAAKH,EAAMI,YAChBC,QAAS,SAAAC,GAAO,MAAK,CACjBC,OAAQD,EAAQE,iBAJxB,mBAAQD,EAAR,KAAQA,OAASE,EAAjB,KAQA,OAAKF,EAQO,wBAPA,sBAAKG,UAAWC,IAAMC,UAAWC,IAAKJ,EAAtC,UACJ,qBAAKK,IAAKd,EAAMI,WAAWW,MAAOC,IAAKhB,EAAMI,WAAWa,OACtDjB,EAAMkB,MAASlB,EAAMkB,MAAQ,GAAK,cAAC,UAAD,CAASA,MAAOlB,EAAMkB,MAAOC,KAAK,UAAc,6BACpF,oBAAGT,UAAU,gCAAb,UAA8CV,EAAMI,WAAWgB,MAA/D,IAAsE,cAAC,eAAD,CAAclB,KAAK,eACzF,mBAAGQ,UAAU,8BAAb,SAA4CV,EAAMI,WAAWa,W,yCC9BlE,SAASI,EAAUJ,GACxB,IAAMK,EAAUC,SAASC,OAAOC,MAC9B,IAAIC,OAAO,WAAaT,EAAKU,QAAQ,+BAAgC,QAAU,aAEjF,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAG7C,SAASC,EAAUb,EAAcc,EAAwB/B,GAE9D,IAAIgC,GADJhC,EAAQA,GAAS,IACDiC,QAChB,GAAkB,iBAAPD,GAAmBA,EAAK,CACjC,IAAME,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAkB,IAANL,GACxBA,EAAMhC,EAAMiC,QAAUC,EAEpBF,GAAOA,EAAIM,cACbtC,EAAMiC,QAAUD,EAAIM,eAGtB,IAAIC,EAAgBtB,EAAO,KAD3Bc,EAAQS,mBAAmBT,IAE3B,IAAK,IAAMU,KAAYzC,EAAO,CAC5BuC,GAAiB,KAAOE,EACxB,IAAMC,EAAY1C,EAAMyC,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BnB,SAASC,OAASe,EAGb,SAASI,EAAa1B,GAC3Ba,EAAUb,EAAM,GAAI,CAAEgB,SAAU,IC7B3B,IAAMW,EAAoB,uCAAG,sBAAAC,EAAA,sEACnBC,MAAM,qDADa,mFAAH,qDAIpBC,EAAqB,uCAAG,WAAOC,GAAP,SAAAH,EAAA,sEACpBC,MAAM,+CAAgD,CAC/DG,OAAQ,OACRC,QAAS,CACL,eAAgB,iCAChBC,cAAe,UAAY9B,EAAU,UAEzC+B,KAAMC,KAAKC,UAAU,CAACC,YAAaP,MAPN,mFAAH,sDAgBrBQ,EAAY,uCAAG,WAAOC,GAAP,SAAAZ,EAAA,sEACXC,MAAM,mDAAoD,CACnEG,OAAQ,OACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,oBAEpBW,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUG,KAXD,mFAAH,sDAqBZM,EAAe,uCAAG,WAAON,GAAP,SAAAZ,EAAA,sEACdC,MAAM,sDAAuD,CACtEG,OAAQ,OACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,oBAEpBW,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUG,KAXE,mFAAH,sDAefO,EAAmB,uCAAG,WAAOC,GAAP,SAAApB,EAAA,sEACzBC,MAAM,mDAAoD,CAC5DG,OAAQ,OACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,oBAEpBW,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUW,KAXM,mFAAH,sDAcnBC,EAAc,uCAAG,sBAAArB,EAAA,sEACpBC,MAAM,kDAAmD,CAC3DG,OAAQ,MACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAY9B,EAAU,UAEzCwC,SAAU,SACVC,eAAgB,gBAXM,mFAAH,qDAgBdK,EAAc,uCAAG,WAAOV,GAAP,SAAAZ,EAAA,sEACpBC,MAAM,kDAAmD,CAC3DG,OAAQ,QACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAY9B,EAAU,UAEzCwC,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUG,KAZC,mFAAH,sDAedW,EAAa,uCAAG,WAAOH,GAAP,SAAApB,EAAA,sEACZC,MAAM,oDAAqD,CACpEG,OAAQ,OACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,oBAEpBW,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUW,KAXA,mFAAH,sDAmBbI,EAAa,uCAAG,WAAOZ,GAAP,SAAAZ,EAAA,sEACZC,MAAM,uDAAwD,CACvEG,OAAQ,OACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,oBAEpBW,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUG,KAXA,mFAAH,sDAoBba,EAAkB,uCAAG,WAAOb,GAAP,SAAAZ,EAAA,sEACjBC,MAAM,6DAA8D,CAC7EG,OAAQ,OACRS,KAAM,OACNC,MAAO,WACPC,YAAa,cACbV,QAAS,CACL,eAAgB,oBAEpBW,SAAU,SACVC,eAAgB,cAChBV,KAAMC,KAAKC,UAAUG,KAXK,mFAAH,sDChIlBc,EAAqD,0BACrDC,EAAqD,0BACrDC,EAAmD,yBAEnDC,EAA6C,sBAC7CC,EAAmD,yBAEnDC,EAA6D,8BAC7DC,EAA6D,8BAwC7DC,EAA2B,WACpC,OAAO,SAAUC,GACbA,EAAS,CACL7E,KAAMqE,IAEV3B,IAAuBoC,MAAK,SAAAC,GACxB,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACO,GACL,IAAKA,EAAQC,KACT,MAAM,IAAIC,MAAM,WAEhBV,EAAS,CACL7E,KAAMsE,EACNjB,YAAagC,EAAQC,UAG9BE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMuE,SCoBXmB,MA3Ff,WAEI,IAAMC,EAAWC,cACjB,EAAoCC,IAAMC,SAAS,OAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAA8CvG,GAAY,SAACwG,GAAD,sBAA2BA,EAAM5C,gBAAnFA,EAAR,EAAQA,YAAa6C,EAArB,EAAqBA,qBACfrB,EAAWlF,IAEjB,EAA4BwG,cAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,cAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,cAA9B,mBAAOK,EAAP,KAAgBC,EAAhB,KAkBA,SAASC,EAAWC,GAChBX,EAAcW,GACdC,OAAOjB,SAASkB,KAAO,KAAOF,EAGlC,OArBAG,qBAAU,WACFT,EACAL,EAAc,OAETO,EACLP,EAAc,SAETS,GACLT,EAAc,UAEnB,CAACK,EAAWE,EAAaE,IAE5BK,qBAAU,WACNjC,EAASD,OACV,CAACC,IAQA,mCACMqB,EACE,oBAAI1F,UAAU,6BAAd,sGAEA,0BAASC,MAAO,CAACsG,UAAW,UAAWC,MAAO,OAA9C,UACI,sBAAKvG,MAAO,CAACwG,QAAS,QAAtB,UACI,cAAC,MAAD,CAAKpF,MAAM,MAAMqF,OAAuB,QAAfnB,EAAsBoB,QAAST,EAAxD,4CAGA,cAAC,MAAD,CAAK7E,MAAM,QAAQqF,OAAuB,UAAfnB,EAAwBoB,QAAST,EAA5D,4CAGA,cAAC,MAAD,CAAK7E,MAAM,OAAOqF,OAAuB,SAAfnB,EAAuBoB,QAAST,EAA1D,2DAIJ,8BACI,qBAAIlG,UAAWC,IAAM4C,YAArB,UACI,oBAAI7C,UAAU,yCAAyCG,IAAKyF,EAA5D,4CAA8E,mBAAGgB,GAAG,QACnF/D,EAAYgE,QAAO,SAAAC,GAAC,MAAe,QAAXA,EAAEtH,QAAgBuH,KAAI,SAACtH,EAAMuH,GAAP,OAC3C,6BACI,cAAC,IAAD,CACMC,GAAI,CAACC,SAAS,gBAAD,OAAkBzH,EAAK0H,KAAOC,MAAO,CAACC,WAAYlC,IAC/DnF,UAAWC,IAAMqH,eAFvB,SAGI,cAAC,EAAD,CAAY5H,WAAYD,EAAMe,MAAOf,EAAK8H,WAHnC9H,EAAK0H,MADXH,MAQb,oBAAIhH,UAAU,yCAAyCG,IAAK2F,EAA5D,4CAAgF,mBAChFc,GAAG,UACF/D,EAAYgE,QAAO,SAAAC,GAAC,MAAe,UAAXA,EAAEtH,QAAkBuH,KAAI,SAACtH,EAAMuH,GAAP,OAC7C,6BACI,cAAC,IAAD,CACMC,GAAI,CAACC,SAAS,gBAAD,OAAkBzH,EAAK0H,KAAOC,MAAO,CAACC,WAAYlC,IAC/DnF,UAAWC,IAAMqH,eAFvB,SAGI,cAAC,EAAD,CAAY5H,WAAYD,EAAMe,MAAOf,EAAK8H,WAHnC9H,EAAK0H,MADXH,MAQb,oBAAIhH,UAAU,yCAAyCG,IAAK6F,EAA5D,wDAAiF,mBACjFY,GAAG,SACF/D,EAAYgE,QAAO,SAAAC,GAAC,MAAe,SAAXA,EAAEtH,QAAiBuH,KAAI,SAACtH,EAAMuH,GAAP,OAC5C,6BACI,cAAC,IAAD,CACMC,GAAI,CAACC,SAAS,gBAAD,OAAkBzH,EAAK0H,KAAOC,MAAO,CAACC,WAAYlC,IAC/DnF,UAAWC,IAAMqH,eAFvB,SAGI,cAAC,EAAD,CAAY5H,WAAYD,EAAMe,MAAOf,EAAK8H,WAHnC9H,EAAK0H,MADXH,iB,+CCnE1BQ,OAZf,SAAsBlI,GAClB,OACI,sBAAKU,UAAWC,KAAMwH,YAAtB,UACI,mBAAGzH,UAAU,mCAAb,SAAiDV,EAAMoI,cACvD,mBAAG1H,UAAU,uCAAb,iIACA,cAAC,gBAAD,CAAeR,KAAK,YACpB,mBAAGQ,UAAU,wCAAb,qJACA,mBAAGA,UAAWC,KAAM0H,cAApB,gQ,yCCAGC,OARf,SAAsBtI,GAClB,OACI,qBAAKsH,GAAG,WAAW5G,UAAWC,KAAM4H,MAAOlB,QAASrH,EAAMwI,QAA1D,SACKxI,EAAMyI,YCJbC,GAAYnH,SAASoH,eAAe,SAmD3BC,OA3Cf,SAAe5I,GAEX,SAAS6I,EAAalD,GAEG,aAAhBA,EAAEmD,OAAOxB,IAA8C,gBAAvB3B,EAAEoD,cAAczB,IAAoC,WAAV3B,EAAEqD,MAC7EhJ,EAAMwI,UACN7C,EAAEsD,mBAIV,SAASC,IACLlJ,EAAMwI,UAWV,OARAxB,qBAAU,WAEN,OADAzF,SAAS4H,iBAAiB,QAASD,GAC5B,WACH3H,SAAS6H,oBAAoB,QAASF,MAE3C,IAGCR,GACOW,IAASC,aAEhB,cAAC,GAAD,CAAcd,QAAS,kBAAMK,GAAcU,MAAM,GAAjD,SACI,sBAAKjC,GAAG,eAAe5G,UAAWC,KAAM6I,aAAxC,UACI,sBAAK9I,UAAWC,KAAM8I,YAAtB,UACI,oBAAI/I,UAAU,6BAAd,SAA4CV,EAAMuJ,QAClD,sBAAM7I,UAAWC,KAAM+I,MAAOrC,QAASwB,EAAcvB,GAAG,cAAxD,SAAsE,cAAC,YAAD,CAAWpH,KAAK,iBAE1F,qBAAKQ,UAAWC,KAAMgJ,UAAtB,SAAkC3J,EAAMyI,gBAG7CC,IAIK,8BCnDHkB,GAAuD,2BACvDC,GAAuD,2BACvDC,GAAqD,0BAErDC,GAAuD,2BACvDC,GAA6D,8BAC7DC,GAAiE,gCCqI9E,SAASC,GAA4BlK,GACjC,IAAM+E,EAAWlF,IAEjB,EAA6BsK,YAAQ,CACjCC,OAAQ,aACR/J,QAAS,SAAAC,GAAO,MAAK,CACjB+J,OAAQ/J,EAAQ+J,aAHxB,mBAAQA,EAAR,KAAQA,OAASC,EAAjB,KAOA,EAA4BrK,YAAQ,CAChCC,KAAM,aACNC,KAAM,CAACmH,GAAItH,EAAMG,KAAK0H,IAAKH,MAAO1H,EAAM0H,MAAO6C,QAAQ,GACvDlK,QAAS,SAAAC,GAAO,MAAK,CACjBC,OAAQD,EAAQE,iBAJxB,mBAAQD,EAAR,KAAQA,OAASE,EAAjB,KAQAuG,qBAAU,WACFqD,GACArK,EAAMwK,gBAAgBxK,EAAM0H,MAAQ,MAiB5C,OAAQ,sBAAK7G,IAAKJ,EAAV,WACMF,GAAU,qBAAIG,UAAS,UAAKC,KAAM8J,SAAX,QAA2B5J,IAAKyJ,EAA7C,UACI,cAAC,WAAD,CAAUpK,KAAK,YACf,cAAC,qBAAD,CACIwK,UAAU,EAAOC,KAAM3K,EAAMG,KAAKc,KAAM2J,UAAW5K,EAAMG,KAAKY,MAC9DK,MAAOpB,EAAMG,KAAKiB,MAAOyJ,YAlB7B,WACxB9F,EAAS,CACL7E,KAAM+J,GACNa,gBAAiB9K,EAAM0H,MACvBqD,aAAc/K,EAAMG,KAAK0H,MAE7B9C,EAAS,CACD7E,KAAM2E,EACNzE,WAAYJ,EAAMG,aAajBkK,GAAU,oBAAI3J,UAAS,UAAKC,KAAM8J,SAAX,iBAKzBO,OA3Kf,WAEI,MAAwChF,oBAAS,GAAjD,mBAAOiF,EAAP,KAAqBC,EAArB,KACA,EAAwClF,oBAAW,GAAnD,mBAAOmF,EAAP,KAAqBX,EAArB,KAEA,EAAiC7K,GAAY,SAACwG,GAAD,sBAA4BA,EAAMiF,UAAvEC,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,MACjBE,EAAO3L,GAAY,SAACwG,GAAD,OAAuBA,EAAMmF,QAChDvG,EAAWlF,IAEX0L,EAAMF,EAAcE,IACpBC,EAAOH,EAAcG,KAY3B,EAAuBrB,YAAQ,CAC3BC,OAAQ,aACRqB,KAF2B,SAEtBtL,IAZa,SAACA,GACfA,EAAKoK,OACLxF,EAAS,CAAC7E,KAAM8J,GAA6B0B,SAAUvL,EAAKuH,MAAOyD,aAAcA,KAGjFpG,EAAS,CAAC7E,KAAM6J,GAA0B3J,WAAYD,EAAM2K,gBAAiBK,IAC7EpG,EAAS,CAAC7E,KAAM0E,EAA6BxE,WAAYD,KAOzDwL,CAAcxL,MAHbyL,EAAT,oBAOA,EAA6BzB,YAAQ,CACjCC,OAAQ,aACR/J,QAAS,SAAAC,GAAO,MAAK,CACjB+J,OAAQ/J,EAAQ+J,aAHxB,mBAAQA,EAAR,KAAQA,OAASC,EAAjB,KAOAtD,qBAAU,WACFqD,GACAG,EAAgB,KAErB,CAACH,IAWJrD,qBAAU,YACJoE,EAAMS,sBAAwBT,EAAMU,QAAWZ,GAAgB,KAClE,CAACE,EAAMU,SAEV,IAIMvD,EACF,cAAC,GAAD,CAAOC,QALQ,WACf0C,GAAgB,IAIY3B,MAAM,GAAlC,SACI,cAAC,GAAD,CAAcnB,YAAagD,EAAMU,OAAOC,eAIhD,OACI,0BAASpL,MAAO,CAACuG,MAAO,OAAQrG,IAAK+K,EAAYtE,GAAG,6BAApD,UACI,sBAAKzG,IAAKyJ,EAAV,UACKiB,EACG,qBAAK7K,UAAS,UAAKC,KAAMqL,QAAX,aAAd,SACI,cAAC,qBAAD,CACI9L,KAAK,MACLwK,UAAU,EAAMC,KAAI,UAAKY,EAAItK,KAAT,+BAAwB2J,UAAWW,EAAIxK,MAAQwK,EAAIxK,MAAQ,GAC/EK,MAAOmK,EAAInK,MAAQmK,EAAInK,MAAQ,MAGvC,qBAAKV,UAAS,UAAKC,KAAMsL,WAAX,YAAd,SACI,mBAAGvL,UAAU,8BAAb,sOAEP2J,GAAU,qBAAK3J,UAAS,UAAKC,KAAM8J,SAAX,iBAG5Be,EAAKU,OAAS,EAAI,oBAAIxL,UAAWC,KAAMwL,SAArB,SACVX,EAAK/D,KAAI,SAAC2E,EAAM1E,GAAP,OACN,cAACwC,GAAD,CAA6B/J,KAAMiM,EAAqB1E,MAAOA,EAAO8C,gBAAiBA,GAAzC4B,EAAKpD,UAI3D,qBAAKtI,UAAS,UAAKC,KAAMsL,WAAX,YAAd,SACI,mBAAGvL,UAAU,8BAAb,mIAIR,qBAAKA,UAAS,UAAKC,KAAMqL,QAAX,QAAd,SACKT,GAAO,cAAC,qBAAD,CACJrL,KAAK,SACLwK,UAAU,EAAMC,KAAI,UAAKY,EAAItK,KAAT,yBAAuB2J,UAAWW,EAAIxK,MAAQwK,EAAIxK,MAAQ,GAC9EK,MAAOmK,EAAInK,MAAQmK,EAAInK,MAAQ,MAGvC,sBAAKV,UAAS,UAAKC,KAAM0L,YAAX,QAAd,UACI,oBAAG3L,UAAU,+BAAb,UAA6C2K,EAAciB,MAA3D,IAAkE,cAAC,eAAD,CAAcpM,KAAK,eACnFoL,EAAKiB,iBAAmBlB,EAAcE,IACpC,cAAC,SAAD,CAAQrL,KAAK,UAAUiB,KAAK,QAAQkG,QA7DhC,WAChB,IAAMrE,EAAgC,GAC3B,MAAPuI,GACAA,GAAOvI,EAAewJ,KAAKjB,EAAI1D,KAEnC2D,EAAKiB,SAAQ,SAAAtM,GAASA,EAAK0H,KAAO7E,EAAewJ,KAAKrM,EAAK0H,QAC3D9C,EDtBgC,SAAC/B,GACrC,OAAO,SAAU+B,GACbA,EAAS,CACL7E,KAAM0J,KAEV7G,EAAsBC,GAAgBgC,MAAK,SAAAC,GAEvC,OADAyH,QAAQC,IAAI1H,GACRA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACO,GACL,IAAKA,EAAQ6F,MAAMU,OACf,MAAM,IAAIrG,MAAM,WAEhBV,EAAS,CACL7E,KAAM2J,GACNzB,YAAa7C,EAAQ6F,MAAMU,YAGpCpG,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAM4J,SCDT8C,CAAe5J,KAuDZ,SACMoI,EAAMS,qBAAP,yKAGL,sBAAMnL,UAAU,kDAAhB,0VAEHuK,GAAgB1C,SC5GlBsE,OAff,WACI,OACI,sBAAKnM,UAAWC,IAAMmM,IAAtB,UACI,oBAAIpM,UAAS,UAAKC,IAAMoM,cAAX,cAAb,SAAmD,sBAAMrM,UAAU,4BAAhB,qGAEnD,sBAAMA,UAAWC,IAAMqM,cAAvB,SACI,eAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,UACI,cAAC,EAAD,IACA,cAAC,GAAD,a,6BCVPC,GAAiC,gBACjCC,GAAiC,gBACjCC,GAA+B,eAE/BC,GAAmC,iBACnCC,GAAmC,iBACnCC,GAAiC,gBAEjCC,GAAiD,wBACjDC,GAAiD,wBACjDC,GAA+C,uBAE/CC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqC,kBAErCC,GAAuC,mBACvCC,GAAuC,mBACvCC,GAAqC,kBAErCC,GAAiD,wBACjDC,GAAiD,wBACjDC,GAA+C,uBAE/CC,GAAmD,yBACnDC,GAAmD,yBACnDC,GAAiD,wBAEjDC,GAAuD,2BACvDC,GAAuD,2BACvDC,GAAqD,0BAgNrDC,GAAoB,WAC7B,OAAO,SAAU7J,GAEbA,EAAS,CACL7E,KAAM2N,KAGV3J,IAAiBc,MAAK,SAAAC,GAClB,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACL,IAAIA,EAAKqJ,KAIL,MAAM,IAAIpJ,MAAM,WAHhBV,EAAS,CAAC7E,KAAM4N,GAAkBtI,KAAMA,OAK7CE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAM6N,GACNe,MAAOnJ,SC3MZoJ,OApDf,WACI,IAAMlJ,EAAWC,cACXf,EAAWlF,IACXyL,EAAO3L,GAAY,SAACwG,GAAD,sBAA2BA,EAAMmF,SAE1D,EAAyBtF,mBAAS,CAAEgJ,MAAO,GAAIC,SAAU,KAAzD,mBAAOxL,EAAP,KAAayL,EAAb,KAEMC,EAAW,SAACxJ,GACduJ,EAAS,2BAAIzL,GAAL,mBAAYkC,EAAEmD,OAAO7H,KAAO0E,EAAEmD,OAAO/G,UAG3CqN,EAAQC,uBACV,SAAA1J,GACIA,EAAE2J,iBACFvK,EDkImB,SAACtB,GAC5B,OAAO,SAAUsB,GAEbA,EAAS,CACL7E,KAAMkN,KAGV5J,EAAaC,GAAMuB,MAAK,SAAAC,GACpB,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACL,IAAIA,EAAK+J,YAIL,MAAM,IAAI9J,MAAM,WAHhBV,EAAS,CAAC7E,KAAMmN,GAAe7H,KAAMA,OAK1CE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMoN,GACNwB,MAAOnJ,QCzJN6J,CAAU/L,MAEvB,CAAC6H,EAAM7H,IAGX,GAAI6H,EAAKiB,gBAAiB,CAEtB,GAAI1G,EAASiC,MACYjC,EAASiC,MAAM2H,MAAO5J,EAASiC,MAAM2H,KAAK7H,SAEnE,OAAQ,cAAC,IAAD,CAAUD,GAAI,CAACC,SAJF,IAI0BE,MAAO,CAACC,WAAYlC,EAASiC,OAASjC,EAASiC,MAAM2H,SAGxG,OACI,qBAAK/O,UAAWgP,KAAO9O,UAAvB,SACI,sBAAKF,UAAWgP,KAAOC,QAAvB,UACI,oBAAIjP,UAAU,kCAAd,sCACA,uBAAMkP,SAAUR,EAAhB,UACI,qBAAK1O,UAAWgP,KAAOG,eAAgBvI,GAAG,cAA1C,SACI,cAAC,QAAD,CAAOpH,KAAK,OAAO4P,YAAY,SAAS7O,KAAK,QAAQkO,SAAUA,EAAUpN,MAAO0B,EAAKuL,UAEzF,qBAAK1H,GAAG,iBAAiB5G,UAAWgP,KAAOG,eAA3C,SACI,cAAC,gBAAD,CAAe5O,KAAK,WACLkO,SAAUA,EAAUpN,MAAO0B,EAAKwL,aAEnD,qBAAKvO,UAAU,QAAf,SACI,cAAC,SAAD,CAAQS,KAAK,SAAb,iDAGR,oBAAGT,UAAU,uDAAb,qIACkB,cAAC,IAAD,CAAMiH,GAAG,YAAYjH,UAAWgP,KAAOK,SAAvC,6HAClB,oBAAGrP,UAAU,kDAAb,wFAA8E,cAAC,IAAD,CAAMiH,GAAG,mBACnFjH,UAAWgP,KAAOK,SADwD,oIC7C/EC,OAPf,WAEI,OACQ,cAAC,GAAD,K,oBCqDGC,OAlDf,WAEI,IAAM3E,EAAO3L,GAAY,SAACwG,GAAD,OAAuBA,EAAMmF,QAChDvG,EAAWlF,IAEjB,EAAyBmG,mBAAS,CAAE/E,KAAM,GAAI+N,MAAO,GAAIC,SAAU,KAAnE,mBAAOxL,EAAP,KAAayL,EAAb,KAEMC,EAAW,SAACxJ,GACduJ,EAAS,2BAAIzL,GAAL,mBAAYkC,EAAEmD,OAAO7H,KAAO0E,EAAEmD,OAAO/G,UAG3CmO,EAAWb,uBACb,SAAA1J,GACIA,EAAE2J,iBACFvK,EH8LsB,SAACtB,GAC/B,OAAO,SAAUsB,GAEbA,EAAS,CACL7E,KAAMwN,KAGV3J,EAAgBN,GAAMuB,MAAK,SAAAC,GACvB,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACL,IAAIA,EAAK+J,YAIL,MAAM,IAAI9J,MAAM,WAHhBV,EAAS,CAAC7E,KAAMyN,GAAuBnI,KAAMA,OAKlDE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAM0N,GACNkB,MAAOnJ,QGrNNwK,CAAa1M,MAE1B,CAACA,EAAMsB,IAGX,OAAIuG,EAAKiB,gBACG,cAAC,IAAD,CAAU5E,GAAI,CAACC,SAAU,OAIjC,qBAAKlH,UAAWgP,KAAO9O,UAAvB,SACI,sBAAKF,UAAWgP,KAAOC,QAAvB,UACI,oBAAIjP,UAAU,kCAAd,gFACA,uBAAMkP,SAAUM,EAAhB,UACI,qBAAKxP,UAAWgP,KAAOG,eAAvB,SACI,cAAC,QAAD,CAAO3P,KAAK,OAAO4P,YAAY,qBAAM7O,KAAK,OAAOkO,SAAUA,EAC3DpN,MAAO0B,EAAKxC,SAEhB,qBAAKP,UAAWgP,KAAOG,eAAvB,SACI,cAAC,QAAD,CAAO3P,KAAK,OAAO4P,YAAY,SAAS7O,KAAK,QAAQkO,SAAUA,EAAUpN,MAAO0B,EAAKuL,UAEzF,qBAAKtO,UAAWgP,KAAOG,eAAvB,SACI,cAAC,gBAAD,CAAe5O,KAAK,WACLkO,SAAUA,EAAUpN,MAAO0B,EAAKwL,aAEnD,qBAAKvO,UAAU,QAAf,SACI,cAAC,SAAD,CAAQS,KAAK,SAAb,+HAGR,oBAAGT,UAAU,uDAAb,iIACI,cAAC,IAAD,CAAMiH,GAAG,SAASjH,UAAWgP,KAAOK,SAApC,qDC7CLK,OANf,WACI,OACQ,cAAC,GAAD,K,oBCgDGC,OA3Cf,WACI,IAAMtL,EAAWlF,IACXyL,EAAO3L,GAAY,SAACwG,GAAD,sBAA2BA,EAAMmF,SACpDgF,EAAUC,cAEhB,EAAyBvK,mBAAS,CAAEgJ,MAAO,KAA3C,mBAAOvL,EAAP,KAAayL,EAAb,KAMIsB,EAAQnB,uBACR,SAAA1J,GACIA,EAAE2J,iBACFvK,EL+S2B,SAACtB,GACpC,OAAO,SAAUsB,GAEbA,EAAS,CACL7E,KAAMoO,KAGVmC,EAAqBhN,GAAMuB,MAAK,SAAAC,GAC5B,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACLT,EAAS,CAAC7E,KAAMqO,GAAwB/I,KAAMA,OAC/CE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMsO,GACNM,MAAOnJ,QKjUN+K,CAAkBjN,IAC3B6M,EAAQ3O,QAAQ,qBAEpB,CAAC2J,EAAM7H,IAGX,OAAI6H,EAAKiB,gBACG,cAAC,IAAD,CAAU5E,GAAI,CAACC,SAAU,OAIjC,qBAAKlH,UAAWgP,KAAO9O,UAAvB,SACI,sBAAKF,UAAWgP,KAAOC,QAAvB,UACI,oBAAIjP,UAAU,kCAAd,uIACA,uBAAMkP,SAAUY,EAAhB,UACI,qBAAK9P,UAAWgP,KAAOG,eAAvB,SACI,cAAC,QAAD,CAAO3P,KAAK,OAAO4P,YAAY,oDAAiB7O,KAAK,QAAQkO,SAvBhE,SAACxJ,GACduJ,EAAS,2BAAIzL,GAAL,mBAAYkC,EAAEmD,OAAO7H,KAAO0E,EAAEmD,OAAO/G,UAsBoDA,MAAO0B,EAAKuL,UAEjG,qBAAKtO,UAAU,QAAf,SACI,cAAC,SAAD,CAAQS,KAAK,SAAb,2FAGR,oBAAGT,UAAU,uDAAb,yGACI,cAAC,IAAD,CAAMiH,GAAG,SAASjH,UAAWgP,KAAOK,SAApC,qDCtCLY,OANf,WACI,OACQ,cAAC,GAAD,K,oBCwDGC,OAnDf,WAEI,IAAM7L,EAAWlF,IACXyL,EAAO3L,GAAY,SAACwG,GAAD,sBAA4BA,EAAMmF,SACrDgF,EAAUC,cAEhB,EAAyBvK,mBAAS,CAAEiJ,SAAU,GAAI4B,MAAO,KAAzD,mBAAOpN,EAAP,KAAayL,EAAb,KAEMC,EAAW,SAACxJ,GACduJ,EAAS,2BAAIzL,GAAL,mBAAYkC,EAAEmD,OAAO7H,KAAO0E,EAAEmD,OAAO/G,UAG3C+O,EAAmBzB,uBACrB,SAAA1J,GACIA,EAAE2J,iBACFvK,EP2UiC,SAACtB,GAC1C,OAAO,SAAUsB,GAEbA,EAAS,CACL7E,KAAMuO,KAGVnK,EAAmBb,GAAMuB,MAAK,SAAAC,GAC1B,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACLT,EAAS,CAAC7E,KAAMwO,QACjBhJ,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMyO,GACNG,MAAOnJ,QO7VNoL,CAAoBtN,IACxB6H,EAAK0F,UACNV,EAAQ3O,QAAQ,YAGxB,CAAC2J,EAAM7H,EAAMsB,EAAUuL,IAG3B,OAAIhF,EAAKiB,gBACG,cAAC,IAAD,CAAU5E,GAAI,CAACC,SAAU,OAIjC,qBAAKlH,UAAWgP,KAAO9O,UAAvB,SACI,sBAAKF,UAAWgP,KAAOC,QAAvB,UACI,oBAAIjP,UAAU,kCAAd,uIACA,uBAAMkP,SAAUkB,EAAhB,UACI,qBAAKpQ,UAAWgP,KAAOG,eAAvB,SACI,cAAC,gBAAD,CAAe5O,KAAK,WACLkO,SAAUA,EAAUpN,MAAO0B,EAAKwL,aAEnD,qBAAKvO,UAAWgP,KAAOG,eAAvB,SACI,cAAC,QAAD,CAAO3P,KAAK,OAAO4P,YAAY,kHAAwB7O,KAAK,QAAQkO,SAAUA,EACvEpN,MAAO0B,EAAKoN,UAEvB,qBAAKnQ,UAAU,QAAf,SACI,cAAC,SAAD,CAAQS,KAAK,SAAb,yEAGR,oBAAGT,UAAU,uDAAb,0GACY,cAAC,IAAD,CAAMiH,GAAG,SAASjH,UAAWgP,KAAOK,SAApC,qDC9CbkB,OANf,WACI,OACQ,cAAC,GAAD,K,wCCiDGC,OA5Cf,WACI,IAAMZ,EAAUC,cACVjF,EAAO3L,GAAY,SAACwG,GAAD,OAAsBA,EAAMmF,QAC/CvG,EAAWlF,IAEXsR,EAAS9B,uBACX,WACItK,GTwKD,SAAUA,GAEbA,EAAS,CACL7E,KAAMqN,KAGVnJ,EAAc,CAACyM,MAAOxP,EAAU,kBAAkB2D,MAAK,SAAAC,GACnD,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACLT,EAAS,CAAC7E,KAAMsN,QACjB9H,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMuN,GACNqB,MAAOnJ,YSvLnB,CAAC2F,EAAMgF,IAWX,OARAtJ,qBAAU,WACDsE,EAAKiB,kBAENG,QAAQC,IAAI,0CACZ2D,EAAQ3O,QAAQ,CAACiG,SAAU,cAEhC,CAAC0D,EAAKiB,kBAGL,sBAAK7L,UAAWgP,KAAO0B,YAAvB,UACI,qBAAI1Q,UAAWgP,KAAO2B,YAAtB,UACI,oBAAI3Q,UAAWgP,KAAO4B,gBAAtB,SACI,cAAC,IAAD,CAAS3J,GAAI,CAAEC,SAAS,YAAelH,UAAWgP,KAAO6B,KAAzD,SACI,sBAAM7Q,UAAU,6BAAhB,4DAGR,oBAAIA,UAAWgP,KAAO4B,gBAAtB,SACI,cAAC,IAAD,CAAS3J,GAAI,CAAEC,SAAS,mBAAsBlH,UAAWgP,KAAO6B,KAAhE,SACI,sBAAM7Q,UAAU,6BAAhB,uGAGR,oBAAIA,UAAWgP,KAAO4B,gBAAtB,SACI,cAAC,IAAD,CAAS3J,GAAI,CAAEC,SAAS,UAAalH,UAAWgP,KAAO6B,KAAMC,gBAAiB9B,KAAO+B,WAArF,SACI,sBAAM/Q,UAAU,6BAA6B2G,QAAS8J,EAAtD,mDAIZ,mBAAGzQ,UAAU,kDAAb,sU,oBCsBGgR,OA/Df,WAEI,IAAM3M,EAAWlF,IACXyL,EAAO3L,GAAY,SAACwG,GAAD,sBAA4BA,EAAMmF,SAGrDqG,EAAYC,iBAAyB,MACrCC,EAAaD,iBAAyB,MAE5C5K,qBAAU,WACFjC,EAAS6J,QAEb,IAEJ,MAAyB5I,mBAAS,CAAE/E,KAAMqK,EAAKuD,KAAK5N,KAAM+N,MAAO1D,EAAKuD,KAAKG,MAAOC,SAAU,KAA5F,mBAAOxL,EAAP,KAAayL,EAAb,KAEMC,EAAW,SAACxJ,GACduJ,EAAS,2BAAIzL,GAAL,mBAAYkC,EAAEmD,OAAO7H,KAAO0E,EAAEmD,OAAO/G,UAQ3C+P,EAAa,SAACnM,GAChBA,EAAE2J,iBACEqC,EAAUI,UACVJ,EAAUI,QAAQhQ,MAAQuJ,EAAKuD,KAAK5N,MAEpC4Q,EAAWE,UACXF,EAAWE,QAAQhQ,MAAQuJ,EAAKuD,KAAKG,QAI7C,OACI,qBAAKtO,UAAWgP,KAAOsC,gBAAvB,SACI,uBAAMpC,SAjBG,SAACjK,GACdA,EAAE2J,iBACFvK,EVkPmC,SAACtB,GACxC,OAAO,SAAUsB,GACbA,EAAS,CACL7E,KAAM8N,KAEV7J,EAAeV,GAAMuB,MAAK,SAAAC,GACtB,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACL,IAAIA,EAAKqJ,KAIL,MAAM,IAAIpJ,MAAM,WAHhBV,EAAS,CAAC7E,KAAM+N,GAAkBzI,KAAMA,OAK7CE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMgO,GACNY,MAAOnJ,QUvQVsM,CAAkBxO,KAevB,UACI,qBAAK/C,UAAWgP,KAAOG,eAAvB,SACI,cAAC,QAAD,CAAOhP,IAAK8Q,EAAWzR,KAAK,OAAO4P,YAAY,qBAAM7O,KAAK,OAAOkO,SAAUA,EAAUpN,MAAO0B,EAAKxC,KAC1FiR,KAAM,eAEjB,qBAAKxR,UAAWgP,KAAOG,eAAvB,SACI,cAAC,QAAD,CAAOhP,IAAKgR,EAAY3R,KAAK,OAAO4P,YAAY,iCAAQ7O,KAAK,QAAQc,MAAO0B,EAAKuL,MAC1EG,SAAUA,EAAU+C,KAAM,eAErC,qBAAKxR,UAAWgP,KAAOG,eAAvB,SACI,cAAC,gBAAD,CAAe5O,KAAK,WACLkO,SAAUA,EAAUpN,MAAO0B,EAAKwL,aAEnD,sBAAKvO,UAAWgP,KAAOyC,aAAvB,UACI,qBAAKzR,UAAU,QAAf,SACI,cAAC,SAAD,CAAQR,KAAK,UAAUiB,KAAK,SAA5B,sEAEJ,qBAAKT,UAAU,QAAf,SACI,cAAC,SAAD,CAAQR,KAAK,YAAYiB,KAAK,SAASkG,QAAS,kBAAMyK,GAAtD,6DC9CTM,OAXf,WACI,OACI,qBAAK1R,UAAWgP,KAAO2C,iBAAvB,SACI,sBAAK3R,UAAWgP,KAAO4C,eAAvB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,UCFDC,OANf,WACI,OACQ,cAAC,GAAD,K,oBCYGC,OAZf,WACI,OACQ,qBAAK9R,UAAWgP,KAAO9O,UAAvB,SACI,sBAAKF,UAAWgP,KAAOC,QAAvB,UACI,mBAAGjP,UAAU,sDAAb,iKACA,oBAAGA,UAAU,uDAAb,mIACO,cAAC,IAAD,CAAMiH,GAAG,IAAIjH,UAAWgP,KAAO6B,KAA/B,kH,oBC0BZkB,OA7Bf,WACI,IAAOnL,EAAMoL,cAANpL,GAGDnH,EADoBR,GAAY,SAACwG,GAAD,OAAsBA,EAAM5C,YAAYA,eAC/CgE,QAAO,SAAApH,GAAI,OAAIA,EAAK0H,MAAQP,KAAI,GAE/D,OAAInH,EAEI,sBAAKO,UAAWC,KAAMwH,YAAtB,UACI,qBAAKrH,IAAKX,EAAKwS,YAAa3R,IAAKb,EAAKc,OACtC,mBAAGP,UAAU,iCAAb,SAA+CP,EAAKc,OACpD,mBAAGP,UAAU,kCAAb,SAAgDP,EAAKc,OACrD,sBAAKP,UAAWC,KAAMiS,QAAtB,UACI,sBAAKlS,UAAWC,KAAM0H,cAAtB,UAAqC,qGACjC,mBAAG3H,UAAU,gCAAb,SAA8CP,EAAK0S,cACvD,sBAAKnS,UAAWC,KAAM0H,cAAtB,UAAqC,uEACjC,mBAAG3H,UAAU,gCAAb,SAA8CP,EAAK2S,cACvD,sBAAKpS,UAAWC,KAAM0H,cAAtB,UAAqC,iEACjC,mBAAG3H,UAAU,gCAAb,SAA8CP,EAAK4S,SACvD,sBAAKrS,UAAWC,KAAM0H,cAAtB,UAAqC,yFACjC,mBAAG3H,UAAU,gCAAb,SAA8CP,EAAK6S,yBAK3D,qBAAKtS,UAAWC,KAAMwH,YAAtB,SAAmC,yCCVpC8K,OAhBf,WACI,IAAQ3L,EAAOoL,cAAPpL,GACFvC,EAAWlF,IAEjBmH,qBAAU,WACNjC,EAASD,OACV,CAACC,IAEJ,IACM3E,EADkBT,GAAY,SAAAwG,GAAK,sBAASA,EAAM5C,gBAAhDA,YACuBgE,QAAO,SAAApH,GAAI,OAAIA,EAAK0H,MAAQP,KAAI,GAE/D,OACQ,cAAC,GAAD,eAAuBlH,K,0BCN5B,SAAS8S,GAAT,GAAsE,IAA5CzK,EAA2C,EAA3CA,SAAa0K,EAA8B,mBACpEpO,EAAWlF,IACjB,EAAsCmG,oBAAS,GAA/C,mBAAOoN,EAAP,KAAqBC,EAArB,KACQ/H,EAAO3L,GAAY,SAACwG,GAAD,OACrBA,EAAMmF,QAGNgI,EAAI,uCAAG,sBAAAzQ,EAAA,sEACLkC,EAAS6J,MADJ,OAEXyE,GAAc,GAFH,2CAAH,qDASV,OAJArM,qBAAU,WACRsM,MACC,IAEEF,EAKH,cAAC,IAAD,2BACMD,GADN,IAEEI,OAAQ,gBAAG1N,EAAH,EAAGA,SAAH,OACNyF,EAAKiB,gBACH9D,EAEA,cAAC,IAAD,CACEd,GAAI,CACFC,SAAU,SACVE,MAAO,CAAE2H,KAAM5J,UAbhB,K,wBCWE2N,OA/Bf,WACI,IAAMlI,EAAO3L,GAAY,SAACwG,GAAD,sBAA4BA,EAAMmF,SAE3D,OACI,wBAAQ5K,UAAWC,KAAM8S,OAAzB,SACI,sBAAK/S,UAAWC,KAAM+S,IAAtB,UACI,sBAAKhT,UAAU,QAAf,UACI,eAAC,IAAD,CAAMA,UAAWC,KAAMgT,QAAShM,GAAG,IAAnC,UAAuC,cAAC,aAAD,CAAYzH,KAAK,cAAxD,IAAsE,sBAClEQ,UAAU,mCADwD,oFAEtE,eAAC,IAAD,CAAMA,UAAWC,KAAMgT,QAAShM,GAAG,QAAnC,UAA2C,cAAC,WAAD,CAAUzH,KAAK,cAA1D,IAAwE,sBACpEQ,UAAU,mCAD0D,8FAG5E,cAAC,IAAD,CAAMiH,GAAG,IAAT,SACI,cAAC,OAAD,MAEJ,qBAAKjH,UAAU,QAAf,SACK4K,EAAKiB,gBACF,eAAC,IAAD,CAAM5E,GAAG,WAAWjH,UAAWC,KAAMgT,QAArC,UAA8C,cAAC,cAAD,CAAazT,KAAK,cAAhE,IAA8E,sBAC9EQ,UAAU,mCADoE,gGAI9E,eAAC,IAAD,CAAMiH,GAAG,SAASjH,UAAWC,KAAMgT,QAAnC,UAA4C,cAAC,cAAD,CAAazT,KAAK,cAA9D,IAA4E,sBAC5EQ,UAAU,mCADkE,uD,wCCf7F,SAASkT,GAAiBC,GAC7B,IAAMC,EAAU,IAAI3R,KAAK0R,GAEnBE,GADc,IAAI5R,MACE6R,UAAYF,EAAQE,UAgB9C,OAdc,IAAVD,EACc,6CAEC,IAAVA,EACS,iCAETA,GAAS,EACAA,EAAQ,qDAGRA,EAAQ,4DAIL,KAAOD,EAAQG,mBAAmB,QADhB,CAACC,SAAU,gBAAiBC,aAAc,QAASC,KAAM,UAAWC,OAAQ,YAIhH,SAASC,GAAkBhP,GAC9B,OAAQA,GACJ,IAAK,OACD,MAAO,mDAEX,IAAK,UACD,MAAO,yDAEX,QACI,MAAO,wCCEJiP,OAjCf,SAAmBvU,GACf,IACMwU,EADgB7U,GAAY,SAACwG,GAAD,sBAA2BA,EAAM5C,gBAA5DA,YAC8BgE,QAAO,SAAApH,GAAI,OAA6C,IAAzCH,EAAMuD,YAAYkR,QAAQtU,EAAK0H,QAE7E6M,EAAaF,EAAiBG,QAAO,SAACC,EAAeC,GAAhB,OAAiCA,EAAYzT,MAAQwT,IAAgB,GAEhH,OACQ,qBAAIlU,UAAWgP,KAAOtE,MAAtB,UACI,sBAAK1K,UAAS,eAAUgP,KAAOoF,aAA/B,UACI,8BACI,uBAAMpU,UAAU,gCAAhB,cAAkDV,EAAM8L,YAE5D,8BACI,sBAAMpL,UAAU,kDAAhB,SAAmEkT,GAAiB5T,EAAM+U,kBAGlG,oBAAIrU,UAAU,kCAAd,SAAiDV,EAAMiB,OACvD,mBAAGP,UAAS,mCAAZ,SAAmD4T,GAAkBtU,EAAMsF,UAC3E,sBAAK5E,UAAS,eAAUgP,KAAOoF,aAA/B,UACI,8BACKN,EAAiB/M,KAAI,SAACtH,GAAD,OAClB,qBAAKW,IAAKX,EAAK6U,aAA6BhU,IAAG,6BAAwBb,EAAK0H,KAAOnH,UAAWgP,KAAOuF,mBAAnE9U,EAAK0H,UAI/C,8BACI,uBAAMnH,UAAU,gCAAhB,UAAiDgU,EAAjD,IAA6D,cAAC,eAAD,CAAcxU,KAAK,wBCjBzFgV,OAdf,SAAclV,GACV,IAAM6F,EAAWC,cAEjB,OACI,oBAAIpF,UAAWgP,KAAOyF,WAAtB,SACKnV,EAAMoV,OAAO3N,KAAI,SAACtH,GAAD,OACd,cAAC,IAAD,CAAMwH,GAAI,CAACC,SAAS,SAAD,OAAWzH,EAAK0H,KAAOC,MAAO,CAACC,WAAYlC,IAAYnF,UAAWgP,KAAO2F,UAA5F,SACI,cAAC,GAAD,eAAelV,KADyFA,EAAK0H,WCDlHyN,OATf,SAAmBtV,GACf,OACI,sBAAKU,UAAU,QAAf,UACI,oBAAIA,UAAU,6BAAd,SAA4CV,EAAMuJ,QAClD,mBAAG7I,UAAU,8BAAb,SAA4CV,EAAMkB,Y,oBC8B/CqU,OAhCf,SAA0BvV,GACtB,IAAMwV,EAAgBxV,EAAMoV,OAAO7N,QAAO,SAAApH,GAAI,MAAoB,YAAhBA,EAAKmF,UAAsBmQ,MAAM,EAAG,IAChFC,EAAa1V,EAAMoV,OAAO7N,QAAO,SAAApH,GAAI,MAAoB,SAAhBA,EAAKmF,UAAmBmQ,MAAM,EAAG,IAEhF,OACI,sBAAK/U,UAAWgP,KAAOiG,iBAAvB,UACI,sBAAKjV,UAAWgP,KAAOkG,gBAAvB,UACI,oBAAIlV,UAAU,6BAAd,mDACA,oBAAIA,UAAYgV,EAAWxJ,QAAU,GAAOwD,KAAOmG,oBAAsBnG,KAAOoG,oBAAhF,SAEQJ,EAAWjO,KAAI,SAACtH,GAAD,OACX,oBAAIO,UAAS,wCAAmCgP,KAAOqG,YAAvD,SAAqF5V,EAAK2L,QAAhB3L,EAAK0H,aAM/F,gCACI,oBAAInH,UAAU,6BAAd,0DACA,oBAAIA,UAAY8U,EAActJ,QAAU,GAAOwD,KAAOmG,oBAAsBnG,KAAOoG,oBAAnF,SAEQN,EAAc/N,KAAI,SAACtH,GAAD,OACd,oBAAIO,UAAS,wCAAmCgP,KAAOsG,YAAvD,SAAqF7V,EAAK2L,QAAhB3L,EAAK0H,iBC/B9FoO,GAA6C,sBAC7CC,GAAiD,wBACjDC,GAA6C,sBAC7CC,GAA+C,uBAC/CC,GAAmC,iBCmCjCC,OA7Bf,WACI,IAAMvR,EAAWlF,IACjB,EAAoCF,GAAY,SAAAwG,GAAK,sBAASA,EAAMoQ,SAA7DnB,EAAP,EAAOA,OAAQ9I,EAAf,EAAeA,MAAOkK,EAAtB,EAAsBA,WAUtB,OARAxP,qBAAU,WACNjC,EAAS,CAAE7E,KAAM+V,OAClB,CAAClR,IAEJiC,qBAAU,WACNjC,EAASD,OACV,CAACC,IAGA,sBAAKrE,UAAWgP,IAAO5C,IAAvB,UACI,oBAAIpM,UAAS,iBAAb,SAAiC,sBAAMA,UAAU,4BAAhB,yFACjC,sBAAKA,UAAWgP,IAAO1C,cAAvB,UACI,qBAAKtM,UAAWgP,IAAO+G,cAAvB,SACI,cAAC,GAAD,CAAMrB,OAAQA,MAElB,sBAAK1U,UAAWgP,IAAO+G,cAAvB,UACI,cAAC,GAAD,CAAkBrB,OAAQA,IAC1B,cAAC,GAAD,CAAW7L,MAAM,yHAA0BrI,MAAOoL,IAClD,cAAC,GAAD,CAAW/C,MAAM,kHAAwBrI,MAAOsV,c,oBC0CrDE,OA7Df,WAEI,IAAOpP,EAAMoL,cAANpL,GACDzB,EAAWC,cACXf,EAAWlF,IAEjBmH,qBAAU,WACNjC,EAASD,KACLe,EAASiC,MAAMC,YACXlC,EAASiC,MAAMC,WAAWH,SAAS6M,QAAQ,oBAAsB,EACjE1P,EAAS,CAAC7E,KAAM+V,GAAqBU,QAAStV,EAAU,WAKxD0D,EAAS,CAAC7E,KAAM+V,OAGzB,IAEH,IAAOb,EAAUzV,GAAY,SAACwG,GAAD,sBAA4BA,EAAMoQ,SAAxDnB,OACA7R,EAAe5D,GAAY,SAACwG,GAAD,sBAA4BA,EAAM5C,gBAA7DA,YAEP,GAAI6R,EAAOlJ,OAAS,GAAK3I,EAAY2I,OAAS,EAAG,CAC7C,IAAMd,EAAQgK,EAAOwB,MAAK,SAACzW,GAAD,OAA4BA,EAAK0H,MAAQP,KAC7DkN,EAAmBjR,EAAYgE,QAAO,SAAApH,GAAI,OAA6C,IAAzCiL,EAAM7H,YAAYkR,QAAQtU,EAAK0H,QAC7E6M,EAAaF,EAAiBG,QAAO,SAACC,EAAeC,GAAhB,OAAiCA,EAAYzT,MAAQwT,IAAgB,GAEhH,OACI,sBAAKlU,UAAWgP,KAAOC,QAAvB,UACI,qBAAKjP,UAAU,QAAf,SACI,oBAAGA,UAAU,gCAAb,cAA+C0K,EAAMU,YAEzD,sBAAKpL,UAAU,QAAf,UACI,oBAAIA,UAAU,kCAAd,SAAiD0K,EAAMnK,OACvD,mBAAGP,UAAS,2CAAsCgP,KAAOqG,YAAzD,SAAwEzB,GAAkBlJ,EAAM9F,aAEpG,oBAAI5E,UAAU,kCAAd,mDACA,oBAAIA,UAAWgP,KAAOmH,mBAAtB,SACKrC,EAAiB/M,KAAI,SAAAtH,GAAI,OACtB,qBAAIO,UAAWgP,KAAOoH,kBAAtB,UACI,sBAAKpW,UAAWgP,KAAOtP,WAAvB,UACI,qBAAKU,IAAKX,EAAK6U,aAAchU,IAAG,6BAAwBb,EAAK0H,KAAOnH,UAAWgP,KAAOuF,oBACtF,sBAAMvU,UAAU,mCAAhB,SAAoDP,EAAKc,UAE7D,uBAAMP,UAAU,gCAAhB,iBAAqDP,EAAKiB,MAA1D,IAAiE,cAAC,eAAD,CAAclB,KAAK,iBAL1CC,EAAK0H,UAS3D,sBAAKnH,UAAWgP,KAAOoH,kBAAvB,UACI,sBAAMpW,UAAU,kDAAhB,SAAmEkT,GAAiBxI,EAAM2J,aAC1F,uBAAMrU,UAAU,gCAAhB,UAAiDgU,EAAjD,IAA6D,cAAC,eAAD,CAAcxU,KAAK,qBAM5F,OAAQ,8BC1DD6W,OATf,WAEI,OACI,qBAAKrW,UAAU,QAAQC,MAAO,CAACwG,QAAS,OAAQ6P,eAAgB,UAAhE,SACI,cAAC,GAAD,O,oBCkBGC,OAff,SAA2BjX,GACvB,IAAM6F,EAAWC,cAEjB,OACI,oBAAIpF,UAAWgP,KAAOyF,WAAtB,SACKnV,EAAMoV,QAAUpV,EAAMoV,OAAO3N,KAAI,SAACtH,GAAD,OAC9B,cAAC,IAAD,CAAMwH,GAAI,CAACC,SAAS,mBAAD,OAAqBzH,EAAK0H,KAAOC,MAAO,CAACC,WAAYlC,IAClEnF,UAAWgP,KAAO2F,UADxB,SAEI,cAAC,GAAD,eAAelV,KADqBA,EAAK0H,WCc9CqP,OApBf,WACI,IAAMnS,EAAWlF,IACVuV,EAAUzV,GAAY,SAACwG,GAAD,sBAA2BA,EAAMoQ,SAAvDnB,OAMP,OAJApO,qBAAU,WACNjC,EAAS,CAAC7E,KAAM+V,GAAqBU,QAAStV,EAAU,aACzD,IAGC,qBAAKX,UAAWgP,KAAO2C,iBAAvB,SACI,sBAAK3R,UAAWgP,KAAO4C,eAAvB,UACI,cAAC,GAAD,IACA,qBAAK5R,UAAWgP,KAAOyH,YAAvB,SACI,cAAC,GAAD,CAAmB/B,OAAQA,YCfhCgC,OANf,WACI,OACQ,cAAC,GAAD,KC+CZ,SAASC,KACL,IAAMxR,EAAWC,cACXwK,EAAUC,cACVxI,EAAgC,SAAnBuI,EAAQgH,QAAqBzR,EAASiC,OAASjC,EAASiC,MAAMC,WACjF2E,QAAQC,IAAI9G,EAASiC,OACrB,IAAMyP,EAAa,WACfjH,EAAQkH,UAGNC,EACF,cAAC,GAAD,CAAOjP,QAAS+O,EAAYhO,MAAM,0GAAlC,SACI,cAAC,GAAD,MAGFmO,EACF,cAAC,GAAD,CAAOlP,QAAS+O,EAAYhO,MAAM,GAAlC,SACI,cAAC,GAAD,MAIR,OACI,qCACI,cAAC,GAAD,IACA,eAAC,IAAD,CAAQ1D,SAAUkC,GAAclC,EAAhC,UACI,cAAC,IAAD,CAAO8R,KAAK,IAAIC,OAAO,EAAvB,SAA6B,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAO,EAA5B,SAAkC,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAO,EAA/B,SAAqC,cAAC,GAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,OAAO,EAAtC,SAA4C,cAAC,GAAD,MAC5C,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,OAAO,EAArC,SAA2C,cAAC,GAAD,MAC3C,cAAC1E,GAAD,CAAgByE,KAAK,WAAWC,OAAO,EAAvC,SAA6C,cAAC,GAAD,MAC7C,cAAC1E,GAAD,CAAgByE,KAAK,kBAAkBC,OAAO,EAA9C,SAAoD,cAAC,GAAD,MACpD,cAAC1E,GAAD,CAAgByE,KAAK,sBAAsBC,OAAO,EAAlD,SAAwD,cAAC,GAAD,MACxD,cAAC,IAAD,CAAOD,KAAM,mBAAoBC,OAAO,EAAxC,SAA8C,cAAC,GAAD,MAC9C,cAAC,IAAD,CAAOD,KAAM,QAASC,OAAO,EAA7B,SAAmC,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAM,YAAaC,OAAO,EAAjC,SAAuC,cAAC,GAAD,MACvC,cAAC,IAAD,UAAO,cAAC,GAAD,SAGV7P,GAAc,qCACX,cAAC,IAAD,CAAO4P,KAAK,mBAAmBlP,SAAUgP,IACzC,cAAC,IAAD,CAAOE,KAAK,YAAYlP,SAAUiP,IAClC,cAAC,IAAD,CAAOC,KAAK,sBAAsBlP,SAAUiP,UAM7CG,OAvEf,WACI,IAAMvM,EAAO3L,GAAY,SAACwG,GAAD,OAAsBA,EAAMmF,QAC/CvG,EAAWlF,IAejB,OAbAmH,qBAAU,YACDsE,EAAKiB,iBAAmBlL,EAAU,UACnC0D,EAAS6J,QAEd,IAEH5H,qBAAU,WACFsE,EAAKwM,cAAgBzW,EAAU,kBAC/B0D,G9BoQD,SAAUA,GAEbA,EAAS,CACL7E,KAAMiO,KAGVnK,EAAoB,CAAC6M,MAAOxP,EAAU,kBAAkB2D,MAAK,SAAAC,GACzD,OAAIA,GAAOA,EAAIC,GACJD,EAAIE,OAEJC,QAAQC,OAAR,iBAAyBJ,EAAIK,YAEzCN,MAAK,SAACQ,GACLT,EAAS,CAAC7E,KAAMkO,GAAuB5I,KAAMA,OAC9CE,OAAM,SAAAC,GACDZ,EAAS,CACL7E,KAAMmO,GACNS,MAAOnJ,U8BpRfZ,EAAS6J,SAEd,CAACtD,EAAKiB,kBAGL,cAAC,IAAD,UACI,cAAC8K,GAAD,OCjCGU,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjT,MAAK,YAAkD,IAA/CkT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCSDO,GAAkC,CAC3ChV,YAAa,GACb6C,sBAAsB,EACtBoS,qBAAqB,EACrBC,kBAAmB,M,UCEVF,GAA4B,CACrClN,cAAe,CAACE,IAAK,KAAMC,KAAM,GAAIc,MAAO,GAC5CmM,kBAAmB,KACnBrN,MAAO,CAACU,OAAQ,EAAGD,sBAAsB,EAAO6M,qBAAqB,ICF5DH,GAA2B,CACpC1J,KAAM,CAAC5N,KAAM,GAAI+N,MAAO,GAAIC,SAAU,IACtC1C,iBAAiB,EACjBoM,WAAW,EACX3H,UAAU,EACV8G,cAAc,G,UCbLS,GAA2B,CACpCnD,OAAQ,GACR9I,MAAO,EACPkK,WAAY,EACZoC,aAAY,EACZC,SAAU,GACV/J,MAAO,ICjBEgK,GAAcC,2BAAgB,CACvCxV,YJkBuB,WAAwD,IAAvDuE,EAAsD,uDAA9CyQ,GAAcjB,EAAgC,uCAC9E,OAAQA,EAAOpX,MACX,KAAKqE,EACD,OAAO,2BAAIuD,GAAX,IAAkB1B,sBAAsB,EAAMoS,qBAAqB,IAGvE,KAAKhU,EACD,OAAO,2BAAIsD,GAAX,IAAkBvE,YAAa+T,EAAO/T,YAAa6C,sBAAsB,IAG7E,KAAK3B,EACD,OAAO,2BAAIqD,GAAX,IAAkB1B,sBAAsB,EAAOoS,qBAAqB,IAGxE,KAAK9T,EACD,OAAO,2BAAIoD,GAAX,IAAkB2Q,kBAAmBnB,EAAOmB,oBAGhD,KAAK9T,EACD,OAAO,2BAAImD,GAAX,IAAkB2Q,kBAAmBF,GAAaE,oBAGtD,KAAK7T,EACD,IAAIxE,EAAakX,EAAOlX,WACpB4Y,EAAqBlR,EAAMvE,YAE/B,GAAwB,QAApBnD,EAAWF,KACX8Y,EAAmBvM,SAAQ,SAAAtM,GACL,QAAdA,EAAKD,OACJC,EAAK0H,MAAQzH,EAAWyH,IAAO1H,EAAK8H,QAAU,EAAI9H,EAAK8H,QAAU,UAK9E,CACI,IAAIgR,EAAYnR,EAAMvE,YAAY2V,WAAU,SAAA/Y,GAAI,OAAIA,EAAK0H,MAAQzH,EAAWyH,OACvDzH,EAArBA,EAAW6H,QAAoB,2BAAO7H,GAAP,IAAmB6H,QAAS7H,EAAW6H,QAAU,IAAe,2BAAO7H,GAAP,IAAmB6H,QAAS,IAC3H+Q,EAAmBG,OAAOF,EAAW,EAAG7Y,GAG5C,OAAO,2BAAI0H,GAAX,IAAkBvE,YAAayV,IAGnC,KAAKnU,EACD,IAAImU,EAAqBlR,EAAMvE,YAC3BpD,EAAO2H,EAAMvE,YAAYqT,MAAK,SAAAzW,GAAI,OAAIA,EAAK0H,MAAQyP,EAAOlX,WAAWyH,OACrEoR,EAAYnR,EAAMvE,YAAY2V,WAAU,SAAA/Y,GAAI,OAAIA,EAAK0H,MAAQyP,EAAOlX,WAAWyH,OAMnF,OALI1H,IACeA,EAAfA,EAAK8H,QAAc,2BAAO9H,GAAP,IAAa8H,QAAS9H,EAAK8H,QAAU,IAAS,2BAAO9H,GAAP,IAAa8H,QAAS,IACvF+Q,EAAmBG,OAAOF,EAAW,EAAG9Y,IAGrC,2BAAI2H,GAAX,IAAkBvE,YAAayV,IAGnC,QACI,OAAOlR,IIzEfsD,MHsBiB,WAAkD,IAAjDtD,EAAgD,uDAAxCyQ,GAAcjB,EAA0B,uCAElE,OAAQA,EAAOpX,MACX,KAAK0J,GACD,OAAO,2BAAI9B,GAAX,IAAkBsD,MAAM,2BAAKtD,EAAMsD,OAAZ,IAAmBS,sBAAsB,EAAM6M,qBAAqB,MAG/F,KAAK7O,GACD,OAAO,2BACA/B,GADP,IAEIuD,cAAc,2BAAKkN,GAAalN,eAAnB,IAAkCG,KAAM,KACrDJ,MAAM,2BAAKtD,EAAMsD,OAAZ,IAAmBU,OAAQwL,EAAOlP,YAAayD,sBAAsB,MAIlF,KAAK/B,GACD,OAAO,2BAAIhC,GAAX,IAAkBsD,MAAM,2BAAKtD,EAAMsD,OAAZ,IAAmBS,sBAAsB,EAAO6M,qBAAqB,MAGhG,KAAK3O,GACD,IAAI3J,EAAakX,EAAOlX,WACpBgZ,EAAWb,GAEf,GAAwB,QAApBnY,EAAWF,KACXkZ,EAAQ,2BAAOtR,GAAP,IACJuD,cAAc,2BAAKvD,EAAMuD,eAAZ,IAA2BE,IAAKnL,UAIrD,CACIA,EAAW4I,IAAMqQ,eACjB,IAAIC,EAAqBxR,EAAMuD,cAAcG,KAC7C8N,EAAmBH,OAAO7B,EAAOxM,gBAAiB,EAAG1K,GAErDgZ,EAAQ,2BAAOtR,GAAP,IACJuD,cAAc,2BAAKvD,EAAMuD,eAAZ,IAA2BG,KAAM8N,MAItD,IAAIhN,EAAQ,EAQZ,OAPI8M,EAAS/N,cAAcE,KACvB6N,EAAS/N,cAAcE,IAAInK,QAAUkL,EAA2C,EAAnC8M,EAAS/N,cAAcE,IAAInK,OAE5EgY,EAAS/N,cAAcG,KAAKiB,SAAQ,SAACtM,GACjCmM,GAASnM,EAAKiB,SAElBgY,EAAQ,2BAAOA,GAAP,IAAiB/N,cAAc,2BAAK+N,EAAS/N,eAAf,IAA8BiB,MAAOA,MAI/E,KAAKtC,GACD,IAAIuP,EAAczR,EAAMuD,cAAcG,KAClCrL,EAAOoZ,EAAYJ,OAAO7B,EAAO5L,SAAU,GAG/C,OAFA6N,EAAYJ,OAAO7B,EAAOnM,aAAc,EAAGhL,EAAK,IAEzC,2BAAI2H,GAAX,IAAkBuD,cAAc,2BAAKvD,EAAMuD,eAAZ,IAA2BG,KAAM+N,MAGpE,KAAKtP,GACD,IAAIuP,EAAU1R,EAAMuD,cAAcG,KAClCgO,EAAQL,OAAO7B,EAAOxM,gBAAiB,GAEvC,IAAIwB,EAAQ,EAOZ,OANIxE,EAAMuD,cAAcE,KACpBzD,EAAMuD,cAAcE,IAAInK,QAAUkL,EAAwC,EAAhCxE,EAAMuD,cAAcE,IAAInK,OAEtEoY,EAAQ/M,SAAQ,SAACtM,GACbmM,GAASnM,EAAKiB,SAEX,2BAAI0G,GAAX,IACQuD,cAAc,2BAAKvD,EAAMuD,eAAZ,IAA2BG,KAAMgO,EAASlN,MAAOA,MAI1E,QACI,OAAOxE,IGhGfwD,KFwBgB,WAA6D,IAA5DxD,EAA2D,uDAAnDyQ,GAAcjB,EAAqC,uCAE5E,OAAQA,EAAOpX,MACX,KAAKkN,GACD,OAAO,2BAAItF,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,EAAOzE,iBAAiB,IAEzE,KAAKc,GAMD,OALIiK,EAAO9R,KAAK+J,cACZzN,EAAU,QAASwV,EAAO9R,KAAK+J,YAAYkK,MAAM,WAAW,IAC5D3X,EAAU,eAAgBwV,EAAO9R,KAAKvB,eAGnC,2BAAI6D,GAAX,IAAkB6Q,WAAW,EAAOpM,iBAAiB,EAAMsC,KAAMyI,EAAO9R,KAAKqJ,OAEjF,KAAKvB,GACD,OAAO,2BAAIxF,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,KAAKzD,GACD,OAAO,2BAAIzF,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAKxD,GAID,OAHA7K,EAAa,SACbA,EAAa,gBAEN,2BAAImF,GAAX,IAAkB6Q,WAAW,EAAOpM,iBAAiB,EAAOsC,KAAM0J,GAAa1J,OAEnF,KAAKpB,GACD,OAAO,2BAAI3F,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,KAAKtD,GACD,OAAO,2BAAI5F,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAKrD,GAMD,OALI2J,EAAO9R,KAAK+J,cACZzN,EAAU,QAASwV,EAAO9R,KAAK+J,YAAYkK,MAAM,WAAW,IAC5D3X,EAAU,eAAgBwV,EAAO9R,KAAKvB,eAGnC,2BAAI6D,GAAX,IAAkB6Q,WAAW,EAAOpM,iBAAiB,EAAMsC,KAAMyI,EAAO9R,KAAKqJ,OAEjF,KAAKjB,GACD,OAAO,2BAAI9F,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,KAAKnD,GACD,OAAO,2BAAI/F,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAKlD,GACD,OAAO,2BAAIhG,GAAX,IAAkByE,iBAAiB,EAAMoM,WAAW,EAAO9J,KAAMyI,EAAO9R,KAAKqJ,OAEjF,KAAKd,GACD,OAAO,2BAAIjG,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,EAAM8G,cAAc,IAGtE,KAAK9J,GACD,OAAO,2BAAIlG,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAK/C,GACD,OAAO,2BAAInG,GAAX,IAAkB6Q,WAAW,EAAO9J,KAAMyI,EAAO9R,KAAKqJ,OAE1D,KAAKX,GACD,OAAO,2BAAIpG,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,KAAK7C,GACD,OAAO,2BAAIrG,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAK5C,GAMD,OALIkJ,EAAO9R,KAAK+J,cACZzN,EAAU,QAASwV,EAAO9R,KAAK+J,YAAYkK,MAAM,WAAW,IAC5D3X,EAAU,eAAgBwV,EAAO9R,KAAKvB,eAGnC,2BAAI6D,GAAX,IAAkB6Q,WAAW,EAAOb,cAAc,IAEtD,KAAKzJ,GACD,OAAO,2BAAIvG,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,KAAK1C,GACD,OAAO,2BAAIxG,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAKzC,GACD,OAAO,2BAAIzG,GAAX,IAAkB6Q,WAAW,IAEjC,KAAKnK,GACD,OAAO,2BAAI1G,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,KAAKvC,GACD,OAAO,2BAAI3G,GAAX,IAAkB6Q,WAAW,EAAM3H,UAAU,IAEjD,KAAKtC,GACD,OAAO,2BAAI5G,GAAX,IAAkB6Q,WAAW,IAEjC,KAAKhK,GACD,OAAO,2BAAI7G,GAAX,IAAkB6Q,WAAW,EAAO3H,UAAU,IAGlD,QACI,OAAOlJ,IE7HfyO,KDgBgB,WAA6D,IAA5DzO,EAA2D,uDAAnDyQ,GAAcjB,EAAqC,uCAC5E,OAAQA,EAAOpX,MACX,KAAKgW,GACD,OAAO,2BACApO,GADP,IAEIgH,MAAO,GACP8J,aAAa,IAIrB,KAAKzC,GACD,OAAO,2BACArO,GADP,IAEIgH,MAAOwI,EAAOX,QACdiC,aAAa,IAGrB,KAAKxC,GACD,OAAO,2BACAtO,GADP,IAEIgH,MAAO,GACP8J,aAAa,IAGrB,KAAKvC,GACD,OAAO,2BACAvO,GADP,IAEIgH,MAAO,GACP+J,SAAU/Q,EAAM+Q,SAAS3M,OAAf,uBACApE,EAAM+Q,UADN,CACgBvB,EAAOX,UAC3B,CAACW,EAAOX,SACdvB,OAAQkC,EAAOX,QAAQvB,OACvB9I,MAAOgL,EAAOX,QAAQrK,MACtBkK,WAAYc,EAAOX,QAAQH,aAGnC,QACI,OAAO1O,M,oBElDb4R,GAAWC,+BAAoBC,2BAAgBC,MCC1C,SAAC1T,GAEJ,IAAI2T,EAA2B,KAC/B,OAAQ,SAACC,GAAD,OAAwC,SAACzC,GAC7C,IAAOvS,EAAYoB,EAAZpB,SACA7E,EAAiBoX,EAAjBpX,KAAMyW,EAAWW,EAAXX,QAETzW,IAAS+V,KACL6D,GACAA,EAAOpQ,MAAM,IAAM,oBAOnBoQ,EALCnD,EAKQ,IAAIqD,UAAJ,uDAA8DrD,IAJ9D,IAAIqD,UAAU,+CAQ3BF,IACAA,EAAOG,OAAS,SAAAC,GACZnV,EAAS,CAAC7E,KAAMgW,GAAuBS,aAAS9U,KAGpDiY,EAAOK,QAAU,SAAAD,GACbnV,EAAS,CAAC7E,KAAMiW,GAAqBQ,QAASuD,EAAMnO,cAGxD+N,EAAOM,UAAY,SAAAF,GACf,IAAMG,EAAahX,KAAKiX,MAAMJ,EAAM1U,MACpCT,EAAS,CAAC7E,KAAMmW,GAAgBM,QAAS0D,KAG7CP,EAAOS,QAAU,SAAAL,GACbnV,EAAS,CAAC7E,KAAMkW,GAAsBO,aAAS9U,Kf5CjB,oBe+C9B3B,GACA4Z,EAAOU,KAAKnX,KAAKC,UAAUqT,KAGnCoD,EAAKzC,SDxCJnR,GAAQsU,uBAAY3B,GAAaY,IAE9CrQ,IAASkK,OACL,cAAC,IAAMmH,WAAP,UACI,cAAC,IAAD,CAAUvU,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGR5E,SAASoH,eAAe,SAG5BoP,M,mBE1BAtY,EAAOC,QAAU,CAAC,SAAW,qCAAqC,WAAa,uCAAuC,SAAW,qCAAqC,QAAU,oCAAoC,YAAc,0C,mBCAlOD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,YAAc,wCAAwC,gBAAkB,sCAAsC,KAAO,2BAA2B,WAAa,mC,mBCA/ND,EAAOC,QAAU,CAAC,IAAM,iBAAiB,cAAgB,2BAA2B,cAAgB,2BAA2B,cAAgB,6B,mBCA/ID,EAAOC,QAAU,CAAC,iBAAmB,mDAAmD,gBAAkB,4CAA4C,oBAAsB,gDAAgD,oBAAsB,gDAAgD,WAAa,uCAAuC,WAAa,yC,mBCAnWD,EAAOC,QAAU,CAAC,YAAc,wCAAwC,QAAU,0CAA0C,cAAgB,wE,mBCA5ID,EAAOC,QAAU,CAAC,QAAU,4BAA4B,mBAAqB,uCAAuC,kBAAoB,sCAAsC,WAAa,+BAA+B,WAAa,+BAA+B,kBAAoB,wC,mBCA1RD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,eAAiB,gCAAgC,YAAc,+B,mBCAtID,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,eAAiB,mCAAmC,SAAW,0B,mBCAvJD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,eAAiB,sCAAsC,SAAW,6B,mBCAhKD,EAAOC,QAAU,CAAC,IAAM,wBAAwB,QAAU,8B,mBCA1DD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,QAAU,gCAAgC,eAAiB,4CAA4C,SAAW,mC,mBCAlLD,EAAOC,QAAU,CAAC,eAAiB,8CAA8C,gBAAkB,gDAAgD,aAAe,yC,mBCAlKD,EAAOC,QAAU,CAAC,YAAc,wCAAwC,eAAiB,6C,mBCAzFD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,WAAa,0BAA0B,MAAQ,qBAAqB,YAAc,qCAAqC,UAAY,oC,mBCApMD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,QAAU,iCAAiC,eAAiB,6CAA6C,SAAW,oC,mBCArLD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,+BAA+B,YAAc,gCAAgC,kBAAoB,sCAAsC,sBAAwB,0CAA0C,UAAY,gC,mBCAtRD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,+BAA+B,KAAO,8B,mBCA/GD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,cAAgB,mE,mBCAnFD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,WAAa,yBAAyB,YAAc,0BAA0B,kBAAoB,gCAAgC,sBAAwB,oCAAoC,UAAY,0B,mBCAxPD,EAAOC,QAAU,CAAC,MAAQ,mCAAmC,WAAa,wCAAwC,YAAc,yCAAyC,kBAAoB,+CAA+C,sBAAwB,mDAAmD,UAAY,0C","file":"static/js/main.2ab88b3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient_container__21B-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"model-overlay_modal__3gK7B\"};","import {\r\n  TypedUseSelectorHook,\r\n  useSelector as selectorHook,\r\n  useDispatch as dispatchHook,\r\n} from 'react-redux';\r\nimport {TRootState} from \"../services/reducers\";\r\nimport {AppDispatch, AppThunk} from \"./index\";\r\n\r\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import React, {ReactNode} from \"react\";\r\n\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport style from './ingredient.module.css';\r\nimport {useDrag} from \"react-dnd\";\r\n\r\ninterface IIngredientProps {\r\n    ingredient: {\r\n        image: string,\r\n        name: string,\r\n        price: number\r\n    },\r\n    count: number | undefined\r\n};\r\n\r\nfunction Ingredient(props: IIngredientProps): JSX.Element {\r\n    const [{isDrag}, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: {...props.ingredient},\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    if (!isDrag) {\r\n        return (<div className={style.container} ref={dragRef}>\r\n            <img src={props.ingredient.image} alt={props.ingredient.name}/>\r\n            { props.count ? (props.count > 0 && <Counter count={props.count} size=\"small\" />) : <></> }\r\n            <p className=\"text text_type_digits-default\">{props.ingredient.price} <CurrencyIcon type=\"primary\" /></p>\r\n            <p className=\"text text_type_main-default\">{props.ingredient.name}</p>\r\n        </div>);\r\n    } else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\nexport default Ingredient;","export function getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string | number, props?: any): void {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string): void {\r\n  setCookie(name, '', { expires: -1 });\r\n}","import {getCookie} from '../utils/cookies';\r\n\r\nexport const getIngredientRequest = async () => {\r\n    return await fetch('https://norma.nomoreparties.space/api/ingredients');\r\n}\r\n\r\nexport const getOrderNumberRequest = async (ingredientsIds: Array<string>) => {\r\n    return await fetch('https://norma.nomoreparties.space/api/orders', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            Authorization: 'Bearer ' + getCookie('token')\r\n        },\r\n        body: JSON.stringify({ingredients: ingredientsIds})\r\n    });\r\n}\r\n\r\ninterface ILoginForm {\r\n    email: string,\r\n    password: string\r\n};\r\n\r\nexport const loginRequest = async (form: ILoginForm) => {\r\n    return await fetch('https://norma.nomoreparties.space/api/auth/login', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(form)\r\n    });\r\n};\r\n\r\ninterface IRegisterForm {\r\n    email: string,\r\n    name: string,\r\n    password: string\r\n};\r\n\r\nexport const registerRequest = async (form: IRegisterForm) => {\r\n    return await fetch('https://norma.nomoreparties.space/api/auth/register', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(form)\r\n    });\r\n};\r\n\r\nexport const refreshTokenRequest = async (refreshToken: { token: string | undefined }) =>\r\n    await fetch('https://norma.nomoreparties.space/api/auth/token', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(refreshToken)\r\n    });\r\n\r\nexport const getUserRequest = async () =>\r\n    await fetch('https://norma.nomoreparties.space/api/auth/user', {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + getCookie('token')\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n    });\r\n\r\n\r\n\r\nexport const setUserRequest = async (form: IRegisterForm) =>\r\n    await fetch('https://norma.nomoreparties.space/api/auth/user', {\r\n        method: 'PATCH',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + getCookie('token')\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(form)\r\n    });\r\n\r\nexport const logoutRequest = async (refreshToken: { token: string | undefined }) => {\r\n    return await fetch('https://norma.nomoreparties.space/api/auth/logout', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(refreshToken)\r\n    });\r\n};\r\n\r\ninterface IPasswordResetForm {\r\n    email: string\r\n}\r\n\r\nexport const passwordReset = async (form: IPasswordResetForm) => {\r\n    return await fetch('https://norma.nomoreparties.space/api/password-reset', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(form)\r\n    });\r\n};\r\n\r\ninterface IPasswordResetResetForm {\r\n    password: string,\r\n    token: string\r\n}\r\n\r\nexport const passwordResetReset = async (form: IPasswordResetResetForm) => {\r\n    return await fetch('https://norma.nomoreparties.space/api/password-reset/reset', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(form)\r\n    });\r\n};","import {getIngredientRequest} from \"../handleApi\";\r\nimport {\r\n    GET_ORDER_NUMBER_FAILED,\r\n    GET_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    IAddIngredientToBurgerAction,\r\n    IChangeIngredientInBurgerAction,\r\n    IDeleteIngredientFromBurgerAction,\r\n    IOrderNumberFailedAction,\r\n    IOrderNumberRequestAction,\r\n    IOrderNumberSuccessAction\r\n} from \"./order\";\r\nimport {AppDispatch, AppThunk, TIngredient} from \"../../types\";\r\n\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\r\n\r\nexport const ADD_INGREDIENT_DATA: 'ADD_INGREDIENT_DATA' = 'ADD_INGREDIENT_DATA';\r\nexport const DELETE_INGREDIENT_DATA: 'DELETE_INGREDIENT_DATA' = 'DELETE_INGREDIENT_DATA';\r\n\r\nexport const INCREASE_INGREDIENT_COUNTER: 'INCREASE_INGREDIENT_COUNTER' = 'INCREASE_INGREDIENT_COUNTER';\r\nexport const DECSEASE_INGREDIENT_COUNTER: 'DECSEASE_INGREDIENT_COUNTER' = 'DECSEASE_INGREDIENT_COUNTER';\r\n\r\nexport interface IGetIngredientsRequestAction {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST\r\n}\r\nexport interface IGetIngredientsSuccessAction {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS,\r\n  readonly ingredients: Array<TIngredient>\r\n}\r\nexport interface IGetIngredientsFailedAction {\r\n  readonly type: typeof GET_INGREDIENTS_FAILED\r\n}\r\n\r\nexport interface IAddIngredientAction {\r\n  readonly type: typeof ADD_INGREDIENT_DATA,\r\n  readonly currentIngredient: TIngredient\r\n}\r\nexport interface IDeleteIngredientAction {\r\n  readonly type: typeof DELETE_INGREDIENT_DATA\r\n}\r\n\r\nexport interface IIncreaseIngredientAction {\r\n    readonly type: typeof INCREASE_INGREDIENT_COUNTER,\r\n    readonly ingredient: TIngredient\r\n}\r\n\r\nexport interface IDecseaseIngredientAction {\r\n    readonly type: typeof DECSEASE_INGREDIENT_COUNTER,\r\n    readonly ingredient: TIngredient\r\n}\r\n\r\nexport type TIngredientsActions =\r\n    | IGetIngredientsRequestAction\r\n    | IGetIngredientsSuccessAction\r\n    | IGetIngredientsFailedAction\r\n    | IAddIngredientAction\r\n    | IDeleteIngredientAction\r\n    | IIncreaseIngredientAction\r\n    | IDecseaseIngredientAction;\r\n\r\nexport const getIngredients: AppThunk = () => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_INGREDIENTS_REQUEST\r\n        });\r\n        getIngredientRequest().then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((apiData) => {\r\n            if (!apiData.data) {\r\n                throw new Error(\"No data\");\r\n            } else {\r\n                dispatch({\r\n                    type: GET_INGREDIENTS_SUCCESS,\r\n                    ingredients: apiData.data\r\n                });\r\n            }\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: GET_INGREDIENTS_FAILED\r\n                });\r\n            });\r\n    }\r\n}\r\n","import React, {useEffect} from \"react\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Ingredient from \"./ingredient\";\r\nimport style from \"./burger-ingredients.module.css\";\r\nimport {getIngredients} from \"../../services/actions/ingredients\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\n\r\nfunction BurgerIngredients() {\r\n\r\n    const location = useLocation();\r\n    const [currentTab, setCurrentTab] = React.useState(\"bun\");\r\n\r\n    const { ingredients, isLoadingIngredients } = useSelector((store:TRootState) => ({...store.ingredients}));\r\n    const dispatch = useDispatch();\r\n\r\n    const [refBun, inViewBun] = useInView();\r\n    const [refSauce, inViewSauce] = useInView();\r\n    const [refMain, inViewMain] = useInView();\r\n\r\n    useEffect(() => {\r\n        if (inViewBun) {\r\n            setCurrentTab('bun');\r\n        }\r\n        else if (inViewSauce) {\r\n            setCurrentTab('sauce');\r\n        }\r\n        else if (inViewMain) {\r\n            setCurrentTab('main');\r\n        }\r\n    }, [inViewBun, inViewSauce, inViewMain]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getIngredients());\r\n    }, [dispatch]);\r\n\r\n    function setCurrent(currentValue: string): void {\r\n        setCurrentTab(currentValue);\r\n        window.location.href = '/#' + currentValue;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(isLoadingIngredients) ?\r\n                <h2 className=\"text text_type_main-medium\">Загрузка данных...</h2>\r\n                :\r\n                <section style={{flexBasis: \"content\", width: \"50%\"}}>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Tab value=\"bun\" active={currentTab === 'bun'} onClick={setCurrent}>\r\n                            Булки\r\n                        </Tab>\r\n                        <Tab value=\"sauce\" active={currentTab === 'sauce'} onClick={setCurrent}>\r\n                            Соусы\r\n                        </Tab>\r\n                        <Tab value=\"main\" active={currentTab === 'main'} onClick={setCurrent}>\r\n                            Начинки\r\n                        </Tab>\r\n                    </div>\r\n                    <div>\r\n                        <ul className={style.ingredients}>\r\n                            <h2 className=\"text text_type_main-medium mt-15 mb-15\" ref={refBun}>Булки</h2><a id=\"bun\"/>\r\n                            {ingredients.filter(x => x.type === \"bun\").map((item, index) => (\r\n                                <li key={index}>\r\n                                    <Link key={item._id}\r\n                                          to={{pathname: `/ingredients/${item._id}`, state: {background: location}}}\r\n                                          className={style.ingredientLink}>\r\n                                        <Ingredient ingredient={item} count={item.counter}/>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                            <h2 className=\"text text_type_main-medium mt-15 mb-15\" ref={refSauce}>Соусы</h2><a\r\n                            id=\"sauce\"/>\r\n                            {ingredients.filter(x => x.type === \"sauce\").map((item, index) => (\r\n                                <li key={index}>\r\n                                    <Link key={item._id}\r\n                                          to={{pathname: `/ingredients/${item._id}`, state: {background: location}}}\r\n                                          className={style.ingredientLink}>\r\n                                        <Ingredient ingredient={item} count={item.counter}/>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                            <h2 className=\"text text_type_main-medium mt-15 mb-15\" ref={refMain}>Начинка</h2><a\r\n                            id=\"main\"/>\r\n                            {ingredients.filter(x => x.type === \"main\").map((item, index) => (\r\n                                <li key={index}>\r\n                                    <Link key={item._id}\r\n                                          to={{pathname: `/ingredients/${item._id}`, state: {background: location}}}\r\n                                          className={style.ingredientLink}>\r\n                                        <Ingredient ingredient={item} count={item.counter}/>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </section>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BurgerIngredients","import React from \"react\";\r\n\r\nimport {CheckMarkIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport style from './order-details.module.css';\r\n\r\ninterface IOrderDetailsProps {\r\n    orderNumber: string\r\n};\r\n\r\nfunction OrderDetails(props: IOrderDetailsProps) {\r\n    return (\r\n        <div className={style.bodyContent}>\r\n            <p className=\"text text_type_digits-large p-15\">{props.orderNumber}</p>\r\n            <p className=\"text text_type_main-medium p-5 mb-10\">идентификатор заказа</p>\r\n            <CheckMarkIcon type=\"primary\"/>\r\n            <p className=\"text text_type_main-default p-5 mt-10\">Ваш заказ начали готовить</p>\r\n            <p className={style.secondaryText}>Дождитесь готовности на орбитальной станции</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetails;","import React from \"react\";\r\n\r\nimport style from './model-overlay.module.css';\r\n\r\ninterface IModalOverlayProps {\r\n    title: string,\r\n    children: object,\r\n    onClose: () => void\r\n}\r\nfunction ModalOverlay(props: IModalOverlayProps) {\r\n    return (\r\n        <div id=\"my-modal\" className={style.modal} onClick={props.onClose}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalOverlay;","import React, {MouseEventHandler, useEffect} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport style from './modal.module.css';\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\ninterface IModalProps {\r\n    title: string,\r\n    children: object,\r\n    onClose: () => void\r\n};\r\n\r\nfunction Modal(props: IModalProps) {\r\n\r\n    function onCloseModal(e: any): void {\r\n\r\n        if ((e.target.id === 'my-modal') || (e.currentTarget.id === \"close-modal\") || (e.key === 'Escape')) {\r\n            props.onClose();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    function keyUpHandler() {\r\n        props.onClose();\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keyup', keyUpHandler);\r\n        return () => {\r\n            document.removeEventListener('keyup', keyUpHandler);\r\n            }\r\n    }, []);\r\n\r\n\r\n    if (modalRoot) {\r\n        return ReactDOM.createPortal(\r\n        (\r\n        <ModalOverlay onClose={() => onCloseModal} title=\"\">\r\n            <div id=\"modalContent\" className={style.modalContent}>\r\n                <div className={style.modalHeader}>\r\n                    <h2 className=\"text text_type_main-medium\">{props.title}</h2>\r\n                    <span className={style.close} onClick={onCloseModal} id=\"close-modal\"><CloseIcon type=\"primary\"/></span>\r\n                </div>\r\n                <div className={style.modalMain}>{props.children}</div>\r\n            </div>\r\n        </ModalOverlay>\r\n        ), modalRoot\r\n    )\r\n    }\r\n    else {\r\n        return (<></>)\r\n    }\r\n\r\n}\r\n\r\nexport default Modal;","import {getOrderNumberRequest} from \"../handleApi\";\r\nimport {AppDispatch, AppThunk, TIngredient} from \"../../types\";\r\n\r\nexport const GET_ORDER_NUMBER_REQUEST: 'GET_ORDER_NUMBER_REQUEST' = 'GET_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_SUCCESS: 'GET_ORDER_NUMBER_SUCCESS' = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const GET_ORDER_NUMBER_FAILED: 'GET_ORDER_NUMBER_FAILED' = 'GET_ORDER_NUMBER_FAILED';\r\n\r\nexport const ADD_INGREDIENT_TO_BURGER: 'ADD_INGREDIENT_TO_BURGER' = 'ADD_INGREDIENT_TO_BURGER';\r\nexport const CHANGE_INGREDIENT_IN_BURGER: 'CHANGE_INGREDIENT_IN_BURGER' = 'CHANGE_INGREDIENT_IN_BURGER';\r\nexport const DELETE_INGREDIENT_FROM_BURGER: 'DELETE_INGREDIENT_FROM_BURGER' = 'DELETE_INGREDIENT_FROM_BURGER';\r\n\r\nexport interface IOrderNumberRequestAction {\r\n  readonly type: typeof GET_ORDER_NUMBER_REQUEST\r\n}\r\nexport interface IOrderNumberSuccessAction {\r\n  readonly type: typeof GET_ORDER_NUMBER_SUCCESS,\r\n  readonly orderNumber: number\r\n}\r\nexport interface IOrderNumberFailedAction {\r\n  readonly type: typeof GET_ORDER_NUMBER_FAILED\r\n}\r\n\r\nexport interface IAddIngredientToBurgerAction {\r\n    readonly type: typeof ADD_INGREDIENT_TO_BURGER,\r\n    readonly ingredient: TIngredient,\r\n    readonly ingredientIndex: number\r\n}\r\n\r\nexport interface IChangeIngredientInBurgerAction {\r\n    readonly type: typeof CHANGE_INGREDIENT_IN_BURGER,\r\n    readonly oldIndex: number,\r\n    readonly currentIndex: number\r\n}\r\n\r\nexport interface IDeleteIngredientFromBurgerAction {\r\n    readonly type: typeof DELETE_INGREDIENT_FROM_BURGER,\r\n    readonly ingredientIndex: number\r\n}\r\n\r\nexport type TOrderActions =\r\n    | IOrderNumberRequestAction\r\n    | IOrderNumberSuccessAction\r\n    | IOrderNumberFailedAction\r\n    | IAddIngredientToBurgerAction\r\n    | IChangeIngredientInBurgerAction\r\n    | IDeleteIngredientFromBurgerAction;\r\n\r\nexport const getOrderNumber: AppThunk = (ingredientsIds: Array<string>) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_ORDER_NUMBER_REQUEST\r\n        });\r\n        getOrderNumberRequest(ingredientsIds).then(res => {\r\n            console.log(res);\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((apiData) => {\r\n            if (!apiData.order.number) {\r\n                throw new Error(\"No data\");\r\n            } else {\r\n                dispatch({\r\n                    type: GET_ORDER_NUMBER_SUCCESS,\r\n                    orderNumber: apiData.order.number\r\n                });\r\n            }\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: GET_ORDER_NUMBER_FAILED\r\n                });\r\n            });\r\n    }\r\n}","import React, {useState, useEffect} from \"react\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {useDrop, useDrag} from 'react-dnd';\r\n\r\nimport { CurrencyIcon, DragIcon, Button, ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport style from './burger-constructor.module.css';\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport Modal from \"../modal/modal\";\r\n\r\nimport {getOrderNumber, ADD_INGREDIENT_TO_BURGER, CHANGE_INGREDIENT_IN_BURGER, DELETE_INGREDIENT_FROM_BURGER} from \"../../services/actions/order\";\r\nimport { INCREASE_INGREDIENT_COUNTER, DECSEASE_INGREDIENT_COUNTER } from \"../../services/actions/ingredients\";\r\nimport {TRootState} from \"../../services/reducers\";\r\nimport {TIngredient} from \"../../types\";\r\n\r\ninterface IBurgerConstructorIngredient extends TIngredient {\r\n    change: boolean,\r\n    index: number\r\n}\r\n\r\nfunction BurgerConstructor() {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [currentIndex, setCurrentIndex] = useState( -1); // стейт для определения текущего ингредиента, на который наведен курсор\r\n\r\n    const { currentBurger, order } = useSelector((store: TRootState) => ({...store.order}));\r\n    const auth = useSelector((store: TRootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const bun = currentBurger.bun;\r\n    const main = currentBurger.main;\r\n\r\n    const onDropHandler = (item: IBurgerConstructorIngredient) => {\r\n        if (item.change) {\r\n            dispatch({type: CHANGE_INGREDIENT_IN_BURGER, oldIndex: item.index, currentIndex: currentIndex});\r\n        }\r\n        else {\r\n            dispatch({type: ADD_INGREDIENT_TO_BURGER, ingredient: item, ingredientIndex: currentIndex});\r\n            dispatch({type: INCREASE_INGREDIENT_COUNTER, ingredient: item});\r\n        }\r\n    }\r\n\r\n    const [, dropTarget] = useDrop({\r\n        accept: 'ingredient',\r\n        drop(item: IBurgerConstructorIngredient) {\r\n            onDropHandler(item);\r\n        }\r\n    });\r\n\r\n    const [{isOver}, dropRef ] = useDrop({\r\n        accept: \"ingredient\",\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isOver) {\r\n            setCurrentIndex(0);\r\n        }\r\n    }, [isOver]);\r\n\r\n    const createOrder = () => {\r\n        const ingredientsIds: Array<string> = [];\r\n        if (bun != null) {\r\n            bun && ingredientsIds.push(bun._id);\r\n        }\r\n        main.forEach(item => {item._id && ingredientsIds.push(item._id)});\r\n        dispatch(getOrderNumber(ingredientsIds));\r\n    }\r\n\r\n    useEffect(() => {\r\n        (!order.isLoadingOrderNumber && order.number) && setModalVisible(true);\r\n    }, [order.number]);\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const modal = (\r\n        <Modal onClose={closeModal} title=\"\">\r\n            <OrderDetails orderNumber={order.number.toString()} />\r\n        </Modal>\r\n    );\r\n\r\n    return (\r\n        <section style={{width: \"50%\"}} ref={dropTarget} id=\"section-burger-constructor\">\r\n            <div ref={dropRef}>\r\n                {bun ?\r\n                    <div className={`${style.bunItem} p-2 mr-5`}>\r\n                        <ConstructorElement\r\n                            type=\"top\"\r\n                            isLocked={true} text={`${bun.name} (верх)`} thumbnail={bun.image ? bun.image : ''}\r\n                            price={bun.price ? bun.price : 0}/>\r\n                    </div>\r\n                    :\r\n                    <div className={`${style.emptyItems} m-2 p-2`}>\r\n                        <p className=\"text text_type_main-default\">Выберите булку для космического бургера</p>\r\n                    </div>}\r\n                {isOver && <div className={`${style.mainItem} m-5 p-2`}></div>}\r\n            </div>\r\n\r\n            {main.length > 0 ? <ul className={style.itemList}>\r\n                    {main.map((ingr, index) => (\r\n                        <ConstructorElementCusomized item={ingr} key={ingr.key} index={index} setCurrentIndex={setCurrentIndex} />\r\n                    ))}\r\n                </ul>\r\n                :\r\n                <div className={`${style.emptyItems} m-2 p-2`}>\r\n                    <p className=\"text text_type_main-default\">Добавьте ингридиенты</p>\r\n                </div>\r\n            }\r\n\r\n            <div className={`${style.bunItem} p-2`}>\r\n                {bun && <ConstructorElement\r\n                    type=\"bottom\"\r\n                    isLocked={true} text={`${bun.name} (низ)`} thumbnail={bun.image ? bun.image : ''}\r\n                    price={bun.price ? bun.price : 0}/>}\r\n            </div>\r\n\r\n            <div className={`${style.orderFooter} p-5`}>\r\n                <p className=\"text text_type_digits-medium\">{currentBurger.total} <CurrencyIcon type=\"primary\"/></p>\r\n                {(auth.isAuthenticated && currentBurger.bun) ?\r\n                    <Button type=\"primary\" size=\"large\" onClick={createOrder}>\r\n                        {!order.isLoadingOrderNumber ? `Оформить заказ` : `Получаем номер...`}\r\n                    </Button>\r\n                    :\r\n                    <span className=\"text text_type_main-default text_color_inactive\">Пожалуйста авторизуйтесь и добавьте булку, чтобы сделать заказ</span>\r\n                }\r\n                {modalVisible && modal}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface IConstructorElementCusomizedProps {\r\n    item: TIngredient,\r\n    index: number,\r\n    setCurrentIndex: (a: number) => void;\r\n}\r\n\r\nfunction ConstructorElementCusomized(props: IConstructorElementCusomizedProps) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [{isOver}, dropRef ] = useDrop({\r\n        accept: \"ingredient\",\r\n        collect: monitor => ({\r\n            isOver: monitor.isOver(),\r\n        })\r\n    });\r\n\r\n    const [{isDrag}, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: {id: props.item._id, index: props.index, change: true},\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging(),\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isOver) {\r\n            props.setCurrentIndex(props.index + 1);\r\n        }\r\n    });\r\n\r\n    const handleDeleteElement = () => {\r\n        dispatch({\r\n            type: DELETE_INGREDIENT_FROM_BURGER,\r\n            ingredientIndex: props.index,\r\n            ingredientId: props.item._id});\r\n\r\n        dispatch({\r\n                type: DECSEASE_INGREDIENT_COUNTER,\r\n                ingredient: props.item\r\n            }\r\n        );\r\n    };\r\n\r\n    return (<div ref={dragRef}>\r\n                {!isDrag && <li className={`${style.mainItem} p-2`} ref={dropRef}>\r\n                                <DragIcon type=\"primary\"/>\r\n                                <ConstructorElement\r\n                                    isLocked={false} text={props.item.name} thumbnail={props.item.image}\r\n                                    price={props.item.price} handleClose={handleDeleteElement}/>\r\n\r\n                            </li>}\r\n                {isOver && <li className={`${style.mainItem} m-5 p-2`}></li>}\r\n            </div>\r\n            )\r\n}\r\n\r\nexport default BurgerConstructor;","import React from \"react\";\r\nimport style from \"../components/app/app.module.css\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport BurgerIngredients from \"../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../components/burger-constructor/burger-constructor\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className={style.app}>\r\n            <h1 className={`${style.sectionHeader} pt-5 pb-1`}><span className=\"text text_type_main-large\">Соберите бургер</span>\r\n            </h1>\r\n            <main className={style.mainDashboard}>\r\n                <DndProvider backend={HTML5Backend}>\r\n                    <BurgerIngredients/>\r\n                    <BurgerConstructor/>\r\n                </DndProvider>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import {loginRequest, getUserRequest, setUserRequest, logoutRequest, registerRequest, refreshTokenRequest,\r\npasswordReset as resetPasswordRequest, passwordResetReset} from \"../handleApi\";\r\nimport {getCookie} from \"../../utils/cookies\";\r\nimport {AppDispatch, AppThunk} from \"../../types\";\r\n\r\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\r\n\r\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\r\n\r\nexport const REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST' = 'REGISTER_USER_REQUEST';\r\nexport const REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS' = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED: 'REGISTER_USER_FAILED' = 'REGISTER_USER_FAILED';\r\n\r\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\r\n\r\nexport const SET_USER_REQUEST: 'SET_USER_REQUEST' = 'SET_USER_REQUEST';\r\nexport const SET_USER_SUCCESS: 'SET_USER_SUCCESS' = 'SET_USER_SUCCESS';\r\nexport const SET_USER_FAILED: 'SET_USER_FAILED' = 'SET_USER_FAILED';\r\n\r\nexport const REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST' = 'REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\r\nexport const REFRESH_TOKEN_FAILED: 'REFRESH_TOKEN_FAILED' = 'REFRESH_TOKEN_FAILED';\r\n\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\n\r\nexport const SET_NEW_PASSWORD_REQUEST: 'SET_NEW_PASSWORD_REQUEST' = 'SET_NEW_PASSWORD_REQUEST';\r\nexport const SET_NEW_PASSWORD_SUCCESS: 'SET_NEW_PASSWORD_SUCCESS' = 'SET_NEW_PASSWORD_SUCCESS';\r\nexport const SET_NEW_PASSWORD_FAILED: 'SET_NEW_PASSWORD_FAILED' = 'SET_NEW_PASSWORD_FAILED';\r\n\r\ntype TAuthRespond = {accessToken: string, refreshToken: string, user: {name: string, email: string, password: string}};\r\n\r\nexport interface ILoginRequestAction {\r\n  readonly type: typeof LOGIN_REQUEST;\r\n}\r\nexport interface ILoginSuccessAction {\r\n  readonly type: typeof LOGIN_SUCCESS;\r\n  readonly data: TAuthRespond;\r\n}\r\nexport interface ILoginFailedAction {\r\n  readonly type: typeof LOGIN_FAILED;\r\n}\r\n\r\nexport interface ILogoutRequestAction {\r\n  readonly type: typeof LOGOUT_REQUEST;\r\n}\r\nexport interface ILogoutSuccessAction {\r\n  readonly type: typeof LOGOUT_SUCCESS;\r\n}\r\nexport interface ILogoutFailedAction {\r\n  readonly type: typeof LOGOUT_FAILED;\r\n}\r\n\r\nexport interface IRegisterUserRequestAction {\r\n  readonly type: typeof REGISTER_USER_REQUEST;\r\n}\r\nexport interface IRegisterUserSuccessAction {\r\n  readonly type: typeof REGISTER_USER_SUCCESS;\r\n  readonly data: TAuthRespond;\r\n}\r\nexport interface IRegisterUserFailedAction {\r\n  readonly type: typeof REGISTER_USER_FAILED;\r\n}\r\n\r\nexport interface IGetUserRequestAction {\r\n  readonly type: typeof GET_USER_REQUEST;\r\n}\r\nexport interface IGetUserSuccessAction {\r\n  readonly type: typeof GET_USER_SUCCESS;\r\n  readonly data: TAuthRespond;\r\n}\r\nexport interface IGetUserFailedAction {\r\n  readonly type: typeof GET_USER_FAILED;\r\n}\r\n\r\nexport interface ISetUserRequestAction {\r\n  readonly type: typeof SET_USER_REQUEST;\r\n}\r\nexport interface ISetUserSuccessAction {\r\n  readonly type: typeof SET_USER_SUCCESS;\r\n  readonly data: TAuthRespond;\r\n}\r\nexport interface ISetUserFailedAction {\r\n  readonly type: typeof SET_USER_FAILED;\r\n}\r\n\r\nexport interface IRefreshTokenRequestAction {\r\n  readonly type: typeof REFRESH_TOKEN_REQUEST;\r\n}\r\nexport interface IRefreshTokenSuccessAction {\r\n  readonly type: typeof REFRESH_TOKEN_SUCCESS;\r\n  readonly data: TAuthRespond;\r\n}\r\nexport interface IRefreshTokenFailedAction {\r\n  readonly type: typeof REFRESH_TOKEN_FAILED;\r\n}\r\n\r\nexport interface IResetPasswordRequestAction {\r\n  readonly type: typeof RESET_PASSWORD_REQUEST;\r\n}\r\nexport interface IResetPasswordSuccessAction {\r\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n}\r\nexport interface IResetPasswordFailedAction {\r\n  readonly type: typeof RESET_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface ISetNewPasswordRequestAction {\r\n  readonly type: typeof SET_NEW_PASSWORD_REQUEST;\r\n}\r\nexport interface ISetNewPasswordSuccessAction {\r\n  readonly type: typeof SET_NEW_PASSWORD_SUCCESS;\r\n}\r\nexport interface ISetNewPasswordFailedAction {\r\n  readonly type: typeof SET_NEW_PASSWORD_FAILED;\r\n}\r\n\r\nexport type TAuthActions =\r\n    | ILoginRequestAction\r\n    | ILoginSuccessAction\r\n    | ILoginFailedAction\r\n    | ILogoutSuccessAction\r\n    | ILogoutRequestAction\r\n    | ILogoutFailedAction\r\n    | IRegisterUserRequestAction\r\n    | IRegisterUserSuccessAction\r\n    | IRegisterUserFailedAction\r\n    | IGetUserRequestAction\r\n    | IGetUserSuccessAction\r\n    | IGetUserFailedAction\r\n    | ISetUserRequestAction\r\n    | ISetUserSuccessAction\r\n    | ISetUserFailedAction\r\n    | IRefreshTokenRequestAction\r\n    | IRefreshTokenSuccessAction\r\n    | IRefreshTokenFailedAction\r\n    | IResetPasswordRequestAction\r\n    | IResetPasswordSuccessAction\r\n    | IResetPasswordFailedAction\r\n    | ISetNewPasswordRequestAction\r\n    | ISetNewPasswordSuccessAction\r\n    | ISetNewPasswordFailedAction;\r\n\r\ninterface ILoginForm {\r\n    email: string,\r\n    password: string\r\n};\r\n\r\nexport const login: AppThunk = (form: ILoginForm) => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: LOGIN_REQUEST\r\n        });\r\n\r\n        loginRequest(form).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            if (data.accessToken) {\r\n                dispatch({type: LOGIN_SUCCESS, data: data});\r\n            }\r\n            else {\r\n                throw new Error(\"No data\");\r\n            }\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: LOGIN_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const logout: AppThunk = () => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: LOGOUT_REQUEST\r\n        });\r\n\r\n        logoutRequest({token: getCookie('refreshToken')}).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            dispatch({type: LOGOUT_SUCCESS});\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: LOGOUT_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\ninterface IRegisterForm {\r\n    email: string,\r\n    name: string,\r\n    password: string\r\n};\r\n\r\nexport const register: AppThunk = (form: IRegisterForm) => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_REQUEST\r\n        });\r\n\r\n        registerRequest(form).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            if (data.accessToken) {\r\n                dispatch({type: REGISTER_USER_SUCCESS, data: data});\r\n            }\r\n            else {\r\n                throw new Error(\"No data\");\r\n            }\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: REGISTER_USER_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUser: AppThunk = () => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        });\r\n\r\n        getUserRequest().then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            if (data.user) {\r\n                dispatch({type: GET_USER_SUCCESS, data: data});\r\n            }\r\n            else {\r\n                throw new Error(\"No data\");\r\n            }\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: GET_USER_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const setUserAttributes: AppThunk = (form: IRegisterForm) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: SET_USER_REQUEST,\r\n        });\r\n        setUserRequest(form).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            if (data.user) {\r\n                dispatch({type: SET_USER_SUCCESS, data: data});\r\n            }\r\n            else {\r\n                throw new Error(\"No data\");\r\n            }\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: SET_USER_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const refreshToken:AppThunk = () => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: REFRESH_TOKEN_REQUEST\r\n        });\r\n\r\n        refreshTokenRequest({token: getCookie('refreshToken')}).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            dispatch({type: REFRESH_TOKEN_SUCCESS, data: data});\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: REFRESH_TOKEN_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\ninterface IPasswordResetForm {\r\n    email: string\r\n}\r\n\r\nexport const resetPassword: AppThunk = (form: IPasswordResetForm) => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_REQUEST\r\n        });\r\n\r\n        resetPasswordRequest(form).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            dispatch({type: RESET_PASSWORD_SUCCESS, data: data});\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: RESET_PASSWORD_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\ninterface IPasswordResetResetForm {\r\n    password: string,\r\n    token: string\r\n}\r\n\r\nexport const resetSetNewPassword: AppThunk = (form: IPasswordResetResetForm) => {\r\n    return function (dispatch: AppDispatch) {\r\n\r\n        dispatch({\r\n            type: SET_NEW_PASSWORD_REQUEST\r\n        });\r\n\r\n        passwordResetReset(form).then(res => {\r\n            if (res && res.ok) {\r\n                return res.json();\r\n            } else {\r\n                return Promise.reject(`Error: ${res.status}`);\r\n            }\r\n        }).then((data) => {\r\n            dispatch({type: SET_NEW_PASSWORD_SUCCESS});\r\n        }).catch(e => {\r\n                dispatch({\r\n                    type: SET_NEW_PASSWORD_FAILED,\r\n                    error: e\r\n                });\r\n            });\r\n    }\r\n}","import React, {useState, useCallback} from 'react';\r\nimport styles from './login.module.css';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\r\nimport { login as loginAuth } from \"../../services/actions/auth\";\r\n//import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {TRootState} from \"../../services/reducers\";\r\nimport {IAppLocation} from \"../../types\";\r\n\r\n\r\nfunction Login() {\r\n    const location = useLocation<IAppLocation>();\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((store:TRootState) => ({...store.auth}));\r\n\r\n    const [form, setValue] = useState({ email: '', password: '' });\r\n\r\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const login = useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            dispatch(loginAuth(form));\r\n        },\r\n        [auth, form]\r\n    );\r\n\r\n    if (auth.isAuthenticated) {\r\n        const redirectPath = '/';\r\n        if (location.state) {\r\n            const redirectPath = location.state.from ? location.state.from.pathname : '/';\r\n        }\r\n        return (<Redirect to={{pathname: redirectPath, state: {background: location.state && location.state.from}}} />);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h1 className=\"text text_type_main-medium mb-6\">Вход</h1>\r\n                <form onSubmit={login}>\r\n                    <div className={styles.inputContainer} id=\"input-email\">\r\n                        <Input type=\"text\" placeholder=\"E-mail\" name=\"email\" onChange={onChange} value={form.email}/>\r\n                    </div>\r\n                    <div id=\"input-password\" className={styles.inputContainer}>\r\n                        <PasswordInput name=\"password\"\r\n                                       onChange={onChange} value={form.password}/>\r\n                    </div>\r\n                    <div className=\"mb-20\">\r\n                        <Button size=\"medium\">Войти</Button>\r\n                    </div>\r\n                </form>\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">Вы - новый\r\n                    пользователь? <Link to=\"/register\" className={styles.navLinks}>Зарегистрироваться</Link></p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль? <Link to=\"/forgot-password\"\r\n                    className={styles.navLinks}>Восстановить пароль</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nimport Login from \"../components/login/login\";\r\n\r\nfunction LoginPage() {\r\n\r\n    return (\r\n            <Login />\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, {useCallback, useState} from 'react';\r\nimport styles from './register.module.css';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {register as registerAuth} from \"../../services/actions/auth\";\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\n\r\nfunction Register() {\r\n\r\n    const auth = useSelector((store: TRootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setValue] = useState({ name: '', email: '', password: '' });\r\n\r\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const register = useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            dispatch(registerAuth(form));\r\n        },\r\n        [form, dispatch]\r\n    );\r\n\r\n    if (auth.isAuthenticated) {\r\n        return (<Redirect to={{pathname: '/'}} />);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h1 className=\"text text_type_main-medium mb-6\">Регистрация</h1>\r\n                <form onSubmit={register}>\r\n                    <div className={styles.inputContainer}>\r\n                        <Input type=\"text\" placeholder=\"Имя\" name=\"name\" onChange={onChange}\r\n                        value={form.name}/>\r\n                    </div>\r\n                    <div className={styles.inputContainer}>\r\n                        <Input type=\"text\" placeholder=\"E-mail\" name=\"email\" onChange={onChange} value={form.email}/>\r\n                    </div>\r\n                    <div className={styles.inputContainer}>\r\n                        <PasswordInput name=\"password\"\r\n                                       onChange={onChange} value={form.password}/>\r\n                    </div>\r\n                    <div className=\"mb-20\">\r\n                        <Button size=\"medium\">Зарегистрироваться</Button>\r\n                    </div>\r\n                </form>\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">Уже зарегистрированы?\r\n                    <Link to=\"/login\" className={styles.navLinks}>Войти</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport Register from \"../components/register/register\";\r\n\r\nfunction RegisterPage() {\r\n    return (\r\n            <Register />\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import React, {useCallback, useState} from 'react';\r\nimport styles from './forgot-password.module.css';\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\r\nimport { resetPassword as resetPasswordAuth } from \"../../services/actions/auth\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\n\r\nfunction ForgotPassword() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((store:TRootState) => ({...store.auth}));\r\n    const history = useHistory();\r\n\r\n    const [form, setValue] = useState({ email: '' });\r\n\r\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    let reset = useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            dispatch(resetPasswordAuth(form));\r\n            history.replace('/reset-password');\r\n        },\r\n        [auth, form]\r\n    );\r\n\r\n    if (auth.isAuthenticated) {\r\n        return (<Redirect to={{pathname: '/'}} />);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h1 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h1>\r\n                <form onSubmit={reset}>\r\n                    <div className={styles.inputContainer}>\r\n                        <Input type=\"text\" placeholder=\"Укажите e-mail\" name=\"email\" onChange={onChange} value={form.email}/>\r\n                    </div>\r\n                    <div className=\"mb-20\">\r\n                        <Button size=\"medium\">Восстановить</Button>\r\n                    </div>\r\n                </form>\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">Вспомнили пароль?\r\n                    <Link to=\"/login\" className={styles.navLinks}>Войти</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import React from \"react\";\r\nimport ForgotPassword from \"../components/forgot-password/forgot-password\";\r\n\r\nfunction ForgotPasswordPage() {\r\n    return (\r\n            <ForgotPassword />\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;","import React, {useCallback, useState} from 'react';\r\nimport styles from './reset-password.module.css';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\r\nimport { resetSetNewPassword } from \"../../services/actions/auth\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\n\r\nfunction ResetPassword() {\r\n\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((store: TRootState) => ({...store.auth}));\r\n    const history = useHistory();\r\n\r\n    const [form, setValue] = useState({ password: '', token: '' });\r\n\r\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const resetNewPassword = useCallback(\r\n        e => {\r\n            e.preventDefault();\r\n            dispatch(resetSetNewPassword(form));\r\n            if (!auth.hasError) {\r\n                history.replace('/login');\r\n            }\r\n        },\r\n        [auth, form, dispatch, history]\r\n    );\r\n\r\n    if (auth.isAuthenticated) {\r\n        return (<Redirect to={{pathname: '/'}} />);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h1 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h1>\r\n                <form onSubmit={resetNewPassword}>\r\n                    <div className={styles.inputContainer}>\r\n                        <PasswordInput name=\"password\"\r\n                                       onChange={onChange} value={form.password}/>\r\n                    </div>\r\n                    <div className={styles.inputContainer}>\r\n                        <Input type=\"text\" placeholder=\"Введите код из письма\" name=\"token\" onChange={onChange}\r\n                               value={form.token}/>\r\n                    </div>\r\n                    <div className=\"mb-20\">\r\n                        <Button size=\"medium\">Сохранить</Button>\r\n                    </div>\r\n                </form>\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">Вспомнили\r\n                    пароль? <Link to=\"/login\" className={styles.navLinks}>Войти</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","import React from \"react\";\r\nimport ResetPassword from \"../components/reset-password/reset-password\";\r\n\r\nfunction ResetPasswordPage() {\r\n    return (\r\n            <ResetPassword />\r\n    )\r\n}\r\n\r\nexport default ResetPasswordPage;","import React, {useCallback, useEffect} from \"react\";\r\nimport styles from './profile-menu.module.css';\r\n\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {logout as logoutRequest} from \"../../services/actions/auth\";\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\n\r\nfunction ProfileMenu() {\r\n    const history = useHistory();\r\n    const auth = useSelector((store:TRootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = useCallback(\r\n        () => {\r\n            dispatch(logoutRequest());\r\n        },\r\n        [auth, history]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!auth.isAuthenticated) {\r\n            // После выхода переадресуем пользователя на маршрут /login\r\n            console.log('history.replace({pathname: \\'/login\\'});');\r\n            history.replace({pathname: '/login'});\r\n        }\r\n    }, [auth.isAuthenticated])\r\n\r\n    return (\r\n        <div className={styles.menuWrapper}>\r\n            <ul className={styles.profileMenu}>\r\n                <li className={styles.profileMenuItem}>\r\n                    <NavLink to={{ pathname: `/profile` }} className={styles.link}>\r\n                        <span className=\"text text_type_main-medium\">Профиль</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li className={styles.profileMenuItem}>\r\n                    <NavLink to={{ pathname: `/profile/orders` }} className={styles.link}>\r\n                        <span className=\"text text_type_main-medium\">История заказов</span>\r\n                    </NavLink>\r\n                </li>\r\n                <li className={styles.profileMenuItem}>\r\n                    <NavLink to={{ pathname: `/login` }} className={styles.link} activeClassName={styles.linkActive}>\r\n                        <span className=\"text text_type_main-medium\" onClick={logout}>Выход</span>\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n            <p className=\"text text_type_main-default text_color_inactive\">В этом разделе вы можете изменить свои персональные данные</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileMenu;","import React, {useEffect, useState, useRef} from 'react';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"./profile-settings.module.css\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {getUser, setUserAttributes} from \"../../services/actions/auth\";\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\nfunction ProfileSettings() {\r\n\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((store: TRootState) => ({...store.auth}));\r\n\r\n\r\n    const nameInput = useRef<HTMLInputElement>(null);\r\n    const emailInput = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n            dispatch(getUser());\r\n        },\r\n        []);\r\n\r\n    const [form, setValue] = useState({ name: auth.user.name, email: auth.user.email, password: '' });\r\n\r\n    const onChange = (e: { target: { name: string; value: string; }; }) => {\r\n        setValue({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const saveUser = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault();\r\n        dispatch(setUserAttributes(form));\r\n    }\r\n\r\n    const cancelUser = (e: { preventDefault: () => void; }) => {\r\n        e.preventDefault()\r\n        if (nameInput.current) {\r\n            nameInput.current.value = auth.user.name\r\n        };\r\n        if (emailInput.current) {\r\n            emailInput.current.value = auth.user.email\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className={styles.settingsWrapper}>\r\n            <form onSubmit={saveUser}>\r\n                <div className={styles.inputContainer}>\r\n                    <Input ref={nameInput} type=\"text\" placeholder=\"Имя\" name=\"name\" onChange={onChange} value={form.name}\r\n                           icon={'EditIcon'}/>\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                    <Input ref={emailInput} type=\"text\" placeholder=\"Логин\" name=\"email\" value={form.email}\r\n                           onChange={onChange} icon={'EditIcon'}/>\r\n                </div>\r\n                <div className={styles.inputContainer}>\r\n                    <PasswordInput name=\"password\"\r\n                                   onChange={onChange} value={form.password}/>\r\n                </div>\r\n                <div className={styles.buttonsBlock}>\r\n                    <div className=\"mb-20\">\r\n                        <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n                    </div>\r\n                    <div className=\"mb-20\">\r\n                        <Button type=\"secondary\" size=\"medium\" onClick={() => cancelUser}>Отмена</Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSettings;","import React from \"react\";\r\nimport styles from './profile.module.css';\r\nimport ProfileMenu from \"./profile-menu\";\r\nimport ProfileSettings from \"./profile-settings\";\r\n\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div className={styles.profileContainer}>\r\n            <div className={styles.profileWrapper}>\r\n                <ProfileMenu/>\r\n                <ProfileSettings/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"../components/profile/profile\";\r\n\r\nfunction ProfilePage() {\r\n    return (\r\n            <Profile />\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport styles from './not-found-404.module.css';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction NotFound404() {\r\n    return (\r\n            <div className={styles.container}>\r\n                <div className={styles.wrapper}>\r\n                    <p className=\"text text_type_main-medium text_color_inactive mb-6\">Ошибка 404 - Страница не найдена</p>\r\n                    <p className=\"text text_type_main-default text_color_inactive mb-6\">Вы можете вернуться\r\n                        на <Link to='/' className={styles.link}>главную страницу</Link></p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NotFound404;","import React from \"react\";\r\n\r\nimport style from './ingredient-details.module.css';\r\nimport {useParams} from \"react-router-dom\";\r\n//import {useSelector} from \"react-redux\";\r\nimport { useSelector } from '../../types/hooks';\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\nfunction IngredientDetails() {\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const ingredients_array = useSelector((store:TRootState) => store.ingredients.ingredients);\r\n    const item = ingredients_array.filter(item => item._id === id)[0];\r\n\r\n    if (item) {\r\n        return (\r\n            <div className={style.bodyContent}>\r\n                <img src={item.image_large} alt={item.name}/>\r\n                <p className=\"text text_type_main-medium p-5\">{item.name}</p>\r\n                <p className=\"text text_type_main-default p-5\">{item.name}</p>\r\n                <div className={style.details}>\r\n                    <div className={style.secondaryText}><p>Калории, ккал</p>\r\n                        <p className=\"text text_type_digits-default\">{item.calories}</p></div>\r\n                    <div className={style.secondaryText}><p>Белки, г</p>\r\n                        <p className=\"text text_type_digits-default\">{item.proteins}</p></div>\r\n                    <div className={style.secondaryText}><p>Жиры, г</p>\r\n                        <p className=\"text text_type_digits-default\">{item.fat}</p></div>\r\n                    <div className={style.secondaryText}><p>Углеводы, г</p>\r\n                        <p className=\"text text_type_digits-default\">{item.carbohydrates}</p></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<div className={style.bodyContent}><span>NO</span></div>)\r\n    }\r\n}\r\n\r\nexport default IngredientDetails;","import React, {useEffect} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport IngredientDetails from \"../components/ingredient-details/ingredient-details\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../types/hooks';\r\nimport {getIngredients} from \"../services/actions/ingredients\";\r\n\r\nfunction IngredientPage() {\r\n    const { id } = useParams<{ id: string }>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getIngredients());\r\n    }, [dispatch])\r\n\r\n    const { ingredients } = useSelector(store => ({...store.ingredients}));\r\n    const ingredient = ingredients.filter(item => item._id === id)[0];\r\n\r\n    return (\r\n            <IngredientDetails {...ingredient} />\r\n    )\r\n}\r\n\r\nexport default IngredientPage;","import { Redirect, Route } from 'react-router-dom';\r\nimport { useEffect, useState, FC } from 'react';\r\nimport {getUser} from \"../../services/actions/auth\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\ninterface IProtectedRouteProps extends React.HTMLAttributes<Element> {\r\n    children: React.ReactNode,\r\n    path: string,\r\n    exact: boolean\r\n}\r\n\r\nexport function ProtectedRoute({ children, ...rest }: IProtectedRouteProps) {\r\n  const dispatch = useDispatch();\r\n  const [isUserLoaded, setUserLoaded] = useState(false);\r\n    const auth = useSelector((store:TRootState) =>\r\n        store.auth\r\n    );\r\n\r\n  const init = async () => {\r\n    await dispatch(getUser());\r\n    setUserLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  if (!isUserLoaded) {\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { BurgerIcon, ListIcon, ProfileIcon, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport style from \"./app-header.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\n//import {useSelector} from \"react-redux\";\r\nimport { useSelector } from '../../types/hooks';\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\nfunction AppHeader() {\r\n    const auth = useSelector((store: TRootState) => ({...store.auth}));\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <nav className={style.nav}>\r\n                <div className=\"pl-30\">\r\n                    <Link className={style.navItem} to=\"/\"><BurgerIcon type=\"secondary\"/> <span\r\n                        className=\"text text_type_main-default pl-2\"> Конструктор</span></Link>\r\n                    <Link className={style.navItem} to=\"/feed\"><ListIcon type=\"secondary\"/> <span\r\n                        className=\"text text_type_main-default pl-2\"> Лента заказов</span></Link>\r\n                </div>\r\n                <Link to=\"/\">\r\n                    <Logo/>\r\n                </Link>\r\n                <div className=\"pr-30\">\r\n                    {auth.isAuthenticated ?\r\n                        <Link to=\"/profile\" className={style.navItem}><ProfileIcon type=\"secondary\"/> <span\r\n                        className=\"text text_type_main-default pl-2\">Личный\r\n                        кабинет</span></Link>\r\n                        :\r\n                        <Link to=\"/login\" className={style.navItem}><ProfileIcon type=\"secondary\"/> <span\r\n                        className=\"text text_type_main-default pl-2\">Войти</span></Link>}\r\n\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default AppHeader;","  interface DateTimeFormatOptions {\r\n        localeMatcher?: 'lookup' | 'best fit';\r\n        weekday?: 'long' | 'short' | 'narrow';\r\n        era?:  'long' | 'short' | 'narrow';\r\n        year?: 'numeric' | '2-digit';\r\n        month?: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow';\r\n        day?: 'numeric' | '2-digit';\r\n        hour?: 'numeric' | '2-digit';\r\n        minute?: 'numeric' | '2-digit';\r\n        second?: 'numeric' | '2-digit';\r\n        timeZoneName?: 'long' | 'short';\r\n        formatMatcher?: 'basic' | 'best fit';\r\n        hour12?: boolean;\r\n        timeZone?: string; // this is more complicated than the others, not sure what I expect here\r\n    }\r\n\r\nexport function convertOrderDate(date: string): string{\r\n    const newDate = new Date(date);\r\n    const currentDate = new Date();\r\n    const delta = currentDate.getDate() - newDate.getDate();\r\n    let deltaString = '';\r\n    if (delta === 0) {\r\n        deltaString = 'Сегодня';\r\n    }\r\n    else if (delta === 1) {\r\n        deltaString = 'Вчера';\r\n    }\r\n    else if (delta <= 4){\r\n        deltaString = delta + ' дня назад';\r\n    }\r\n    else {\r\n        deltaString = delta + ' дней назад';\r\n    }\r\n\r\n    const options: DateTimeFormatOptions = {timeZone: 'Europe/Moscow', timeZoneName: 'short', hour: '2-digit', minute: '2-digit'}\r\n    return deltaString + \", \" + newDate.toLocaleTimeString('ru-RU', options);\r\n}\r\n\r\nexport function getReadableStatus(status: string): string{\r\n    switch (status) {\r\n        case 'done': {\r\n            return 'Выполнен';\r\n        }\r\n        case 'pending': {\r\n            return 'Готовится';\r\n        }\r\n        default: {\r\n            return 'Создан';\r\n        }\r\n    }\r\n}\r\n\r\nexport default convertOrderDate;","//import {useSelector} from \"react-redux\";\r\nimport { useSelector } from '../../types/hooks';\r\nimport styles from \"./feed-order.module.css\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport React from \"react\";\r\nimport {convertOrderDate, getReadableStatus} from \"../../services/handleData\";\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\ninterface IFeedOrderProps {\r\n    name: string,\r\n    createdAt: string,\r\n    number: number,\r\n    status: string,\r\n    ingredients: Array<string>\r\n};\r\n\r\nfunction FeedOrder(props: IFeedOrderProps) {\r\n    const {ingredients} = useSelector((store:TRootState) => ({...store.ingredients}));\r\n    const orderIngredients = ingredients.filter(item => props.ingredients.indexOf(item._id) !== -1);\r\n\r\n    const orderTotal = orderIngredients.reduce((previousValue, currentItem) => (currentItem.price + previousValue), 0);\r\n\r\n    return (\r\n            <li className={styles.order}>\r\n                <div className={`mb-5 ${styles.orderHeader}`}>\r\n                    <div>\r\n                        <span className=\"text text_type_digits-default\">#{props.number}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"text text_type_main-default text_color_inactive\">{convertOrderDate(props.createdAt)}</span>\r\n                    </div>\r\n                </div>\r\n                <h2 className=\"text text_type_main-medium mb-5\">{props.name}</h2>\r\n                <p className={`text text_type_main-default mb-5`}>{getReadableStatus(props.status)}</p>\r\n                <div className={`mb-5 ${styles.orderHeader}`}>\r\n                    <div>\r\n                        {orderIngredients.map((item) => (\r\n                            <img src={item.image_mobile} key={item._id} alt={`ingredient-preview-${item._id}`} className={styles.ingredientPreview}/>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"text text_type_digits-default\">{orderTotal} <CurrencyIcon type=\"primary\"/></span>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n    )\r\n}\r\n\r\nexport default FeedOrder;","import React from \"react\";\r\nimport styles from './feed.module.css';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport FeedOrder from \"../feed-order/feed-order\";\r\n\r\nimport {TOrder} from \"../../types\";\r\n\r\ninterface IFeedProps {\r\n    orders: Array<TOrder>\r\n};\r\n\r\nfunction Feed(props: IFeedProps) {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <ul className={styles.ordersList}>\r\n            {props.orders.map((item) => (\r\n                <Link to={{pathname: `/feed/${item._id}`, state: {background: location}}} className={styles.orderLink} key={item._id}>\r\n                    <FeedOrder {...item} />\r\n                </Link>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React from \"react\";\r\n\r\ninterface IFeedTotalProps {\r\n    title: string,\r\n    count: number\r\n};\r\n\r\nfunction FeedTotal(props: IFeedTotalProps) {\r\n    return (\r\n        <div className=\"mb-15\">\r\n            <h2 className=\"text text_type_main-medium\">{props.title}</h2>\r\n            <p className=\"text text_type_digits-large\">{props.count}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeedTotal;","import React from 'react';\r\nimport styles from './feed-orders-status.module.css';\r\n\r\ninterface IFeedOrdersStatusProps {\r\n    orders: Array<{_id: string,\r\n        status: string,\r\n        number: string}>\r\n};\r\n\r\nfunction FeedOrdersStatus(props: IFeedOrdersStatusProps) {\r\n    const pendingOrders = props.orders.filter(item => item.status === 'pending').slice(0, 20);\r\n    const doneOrders = props.orders.filter(item => item.status === 'done').slice(0, 20);\r\n\r\n    return (\r\n        <div className={styles.containerWrapper}>\r\n            <div className={styles.statusContainer}>\r\n                <h2 className=\"text text_type_main-medium\">Готовы:</h2>\r\n                <ul className={(doneOrders.length <= 10 ) ? styles.ordersListOneColumn : styles.ordersListTwoColumn}>\r\n                    {\r\n                        doneOrders.map((item) => (\r\n                            <li className={`text text_type_digits-default ${styles.ordersDone}`} key={item._id}>{item.number}</li>\r\n                            )\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <h2 className=\"text text_type_main-medium\">В работе:</h2>\r\n                <ul className={(pendingOrders.length <= 10 ) ? styles.ordersListOneColumn : styles.ordersListTwoColumn}>\r\n                    {\r\n                        pendingOrders.map((item) => (\r\n                            <li className={`text text_type_digits-default ${styles.ordersWork}`} key={item._id}>{item.number}</li>\r\n                            )\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeedOrdersStatus;","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\n\r\ntype TFeedRespond = {\r\n  orders: Array<any>\r\n  total: number,\r\n  totalToday: number\r\n};\r\n\r\nexport interface IConnectionStartAction {\r\n  readonly type: typeof WS_CONNECTION_START,\r\n  readonly payload: undefined;\r\n}\r\nexport interface IConnectionSuccessAction {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS,\r\n  readonly payload: undefined;\r\n}\r\nexport interface IConnectionErrorAction {\r\n  readonly type: typeof WS_CONNECTION_ERROR,\r\n  readonly payload: string;\r\n}\r\nexport interface IConnectionClosedAction {\r\n  readonly type: typeof WS_CONNECTION_CLOSED,\r\n  readonly payload: undefined;\r\n}\r\nexport interface IGetMessageAction {\r\n  readonly type: typeof WS_GET_MESSAGE,\r\n  readonly payload: TFeedRespond\r\n}\r\nexport interface ISendMessageAction {\r\n  readonly type: typeof WS_SEND_MESSAGE,\r\n  readonly payload: undefined;\r\n}\r\n\r\nexport type TFeedActions =\r\n    | IConnectionStartAction\r\n    | IConnectionSuccessAction\r\n    | IConnectionErrorAction\r\n    | IConnectionClosedAction\r\n    | IGetMessageAction\r\n    | ISendMessageAction;\r\n","import React, {useEffect} from \"react\";\r\nimport styles from \"../components/app/app.module.css\";\r\nimport Feed from \"../components/feed/feed\";\r\nimport FeedTotal from \"../components/feed/feed-total\";\r\nimport FeedOrdersStatus from \"../components/feed/feed-orders-status\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../types/hooks';\r\nimport { getIngredients } from \"../services/actions/ingredients\";\r\nimport {WS_CONNECTION_START} from \"../services/actions/feed\";\r\n\r\nfunction FeedPage() {\r\n    const dispatch = useDispatch();\r\n    const {orders, total, totalToday} = useSelector(store => ({...store.feed}));\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: WS_CONNECTION_START });\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getIngredients());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.app}>\r\n            <h1 className={`pl-5 pt-5 pb-1`}><span className=\"text text_type_main-large\">Лента заказов</span></h1>\r\n            <div className={styles.mainDashboard}>\r\n                <div className={styles.sectionColumn}>\r\n                    <Feed orders={orders}/>\r\n                </div>\r\n                <div className={styles.sectionColumn}>\r\n                    <FeedOrdersStatus orders={orders} />\r\n                    <FeedTotal title=\"Выполнено за все время:\" count={total}/>\r\n                    <FeedTotal title=\"Выполнено за сегодня:\" count={totalToday}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedPage;","import React, {useEffect} from \"react\";\r\nimport styles from './order-info.module.css';\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {getIngredients} from \"../../services/actions/ingredients\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport {WS_CONNECTION_START} from \"../../services/actions/feed\";\r\nimport {getCookie} from \"../../utils/cookies\";\r\nimport {convertOrderDate, getReadableStatus} from \"../../services/handleData\";\r\nimport {TRootState} from \"../../services/reducers\";\r\nimport {IAppLocation} from \"../../types\";\r\n\r\nfunction OrderInfo() {\r\n\r\n    const {id} = useParams<{id: string}>();\r\n    const location = useLocation<IAppLocation>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getIngredients());\r\n        if (location.state.background) {\r\n            if (location.state.background.pathname.indexOf('/profile/orders') > -1) {\r\n                dispatch({type: WS_CONNECTION_START, payload: getCookie('token')})\r\n            } else {\r\n                dispatch({type: WS_CONNECTION_START});\r\n            }\r\n        } else {\r\n                dispatch({type: WS_CONNECTION_START});\r\n            }\r\n\r\n    }, []);\r\n\r\n    const {orders} = useSelector((store: TRootState) => ({...store.feed}));\r\n    const {ingredients} = useSelector((store: TRootState) => ({...store.ingredients}));\r\n\r\n    if (orders.length > 0 && ingredients.length > 0) {\r\n        const order = orders.find((item: { _id: string; }) => item._id === id);\r\n        const orderIngredients = ingredients.filter(item => order.ingredients.indexOf(item._id) !== -1);\r\n        const orderTotal = orderIngredients.reduce((previousValue, currentItem) => (currentItem.price + previousValue), 0);\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className=\"mb-15\">\r\n                    <p className=\"text text_type_digits-default\">#{order.number}</p>\r\n                </div>\r\n                <div className=\"mb-15\">\r\n                    <h2 className=\"text text_type_main-medium mb-5\">{order.name}</h2>\r\n                    <p className={`text text_type_main-default mb-5 ${styles.ordersDone}`}>{getReadableStatus(order.status)}</p>\r\n                </div>\r\n                <h2 className=\"text text_type_main-medium mb-5\">Состав:</h2>\r\n                <ul className={styles.ingredientsWrapper}>\r\n                    {orderIngredients.map(item => (\r\n                        <li className={styles.ingredientWrapper} key={item._id}>\r\n                            <div className={styles.ingredient}>\r\n                                <img src={item.image_mobile} alt={`ingredient-preview-${item._id}`} className={styles.ingredientPreview}/>\r\n                                <span className=\"text text_type_main-default ml-4\">{item.name}</span>\r\n                            </div>\r\n                            <span className=\"text text_type_digits-default\">1 x {item.price} <CurrencyIcon type=\"primary\"/></span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <div className={styles.ingredientWrapper}>\r\n                    <span className=\"text text_type_main-default text_color_inactive\">{convertOrderDate(order.createdAt)}</span>\r\n                    <span className=\"text text_type_digits-default\">{orderTotal} <CurrencyIcon type=\"primary\"/></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nexport default OrderInfo;","import React from \"react\";\r\nimport OrderInfo from \"../components/order-info/order-info\";\r\n\r\nfunction OrderInfoPage() {\r\n\r\n    return (\r\n        <div className=\"mt-15\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <OrderInfo />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderInfoPage;","import React from \"react\";\r\nimport styles from './profile-orders-feed.module.css';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport FeedOrder from \"../feed-order/feed-order\";\r\nimport {TOrder} from \"../../types\";\r\n\r\ninterface IProfileOrdersFeedProps {\r\n    orders: Array<TOrder>\r\n};\r\n\r\nfunction ProfileOrdersFeed(props: IProfileOrdersFeedProps) {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <ul className={styles.ordersList}>\r\n            {props.orders && props.orders.map((item) => (\r\n                <Link to={{pathname: `/profile/orders/${item._id}`, state: {background: location}}}\r\n                      className={styles.orderLink} key={item._id}>\r\n                    <FeedOrder {...item} />\r\n                </Link>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ProfileOrdersFeed;","import React, {useEffect} from \"react\";\r\nimport styles from './profile.module.css';\r\nimport ProfileMenu from \"./profile-menu\";\r\nimport ProfileOrdersFeed from \"./profile-orders-feed\";\r\nimport {WS_CONNECTION_START} from \"../../services/actions/feed\";\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport {getCookie} from \"../../utils/cookies\";\r\nimport {TRootState} from \"../../services/reducers\";\r\n\r\n\r\nfunction ProfileOrders() {\r\n    const dispatch = useDispatch();\r\n    const {orders} = useSelector((store:TRootState) => ({...store.feed}));\r\n\r\n    useEffect(() => {\r\n        dispatch({type: WS_CONNECTION_START, payload: getCookie('token')})\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.profileContainer}>\r\n            <div className={styles.profileWrapper}>\r\n                <ProfileMenu/>\r\n                <div className={styles.feedWrapper}>\r\n                    <ProfileOrdersFeed orders={orders}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileOrders;","import React from \"react\";\r\nimport ProfileOrders from \"../components/profile/profile-orders\";\r\n\r\nfunction ProfileOrdersPage() {\r\n    return (\r\n            <ProfileOrders />\r\n    )\r\n}\r\n\r\nexport default ProfileOrdersPage;","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, useLocation, useHistory} from 'react-router-dom';\r\n\r\nimport HomePage from '../../pages/home';\r\nimport LoginPage from \"../../pages/login\";\r\nimport RegisterPage from \"../../pages/register\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password\";\r\nimport ResetPasswordPage from \"../../pages/reset-password\";\r\nimport ProfilePage from \"../../pages/profile\";\r\nimport NotFound404 from \"../../pages/not-found-404\";\r\nimport IngredientPage from \"../../pages/ingredient\";\r\nimport {ProtectedRoute} from \"../protected-route/protected-route\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport AppHeader from \"../app-header/app-header\";\r\n\r\n//import {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\n\r\nimport {getUser, refreshToken} from \"../../services/actions/auth\";\r\nimport {getCookie} from \"../../utils/cookies\";\r\nimport FeedPage from \"../../pages/feed\";\r\nimport OrderInfoPage from \"../../pages/order-info\";\r\nimport OrderInfo from \"../order-info/order-info\";\r\nimport ProfileOrdersPage from \"../../pages/profile-orders\";\r\nimport {TRootState} from \"../../services/reducers\";\r\nimport {IAppLocation} from \"../../types\";\r\n\r\nfunction App() {\r\n    const auth = useSelector((store:TRootState) => store.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!auth.isAuthenticated && getCookie('token')) {\r\n            dispatch(getUser());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (auth.tokenExpired && getCookie('refreshToken')) {\r\n            dispatch(refreshToken());\r\n            dispatch(getUser());\r\n        }\r\n    }, [auth.isAuthenticated]);\r\n\r\n    return (\r\n        <Router>\r\n            <ModalSwitch />\r\n        </Router>\r\n    );\r\n}\r\n\r\nfunction ModalSwitch() {\r\n    const location = useLocation<IAppLocation>();\r\n    const history = useHistory();\r\n    const background = history.action === 'PUSH' && location.state && location.state.background;\r\n    console.log(location.state)\r\n    const closeModal = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const modalIngredientDetails = (\r\n        <Modal onClose={closeModal} title=\"Детали ингредиента\">\r\n            <IngredientDetails  />\r\n        </Modal>\r\n    );\r\n    const modalOrderInfo = (\r\n        <Modal onClose={closeModal} title=\"\">\r\n            <OrderInfo />\r\n        </Modal>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <AppHeader />\r\n            <Switch location={background || location}>\r\n                <Route path=\"/\" exact={true}><HomePage/></Route>\r\n                <Route path=\"/login\" exact={true}><LoginPage/></Route>\r\n                <Route path=\"/register\" exact={true}><RegisterPage/></Route>\r\n                <Route path=\"/forgot-password\" exact={true}><ForgotPasswordPage/></Route>\r\n                <Route path=\"/reset-password\" exact={true}><ResetPasswordPage/></Route>\r\n                <ProtectedRoute path=\"/profile\" exact={true}><ProfilePage/></ProtectedRoute>\r\n                <ProtectedRoute path=\"/profile/orders\" exact={true}><ProfileOrdersPage/></ProtectedRoute>\r\n                <ProtectedRoute path=\"/profile/orders/:id\" exact={true}><OrderInfoPage /></ProtectedRoute>\r\n                <Route path={'/ingredients/:id'} exact={true}><IngredientPage/></Route>\r\n                <Route path={'/feed'} exact={true}><FeedPage/></Route>\r\n                <Route path={'/feed/:id'} exact={true}><OrderInfoPage /></Route>\r\n                <Route><NotFound404/></Route>\r\n            </Switch>\r\n\r\n            {background && <>\r\n                <Route path=\"/ingredients/:id\" children={modalIngredientDetails}/>\r\n                <Route path=\"/feed/:id\" children={modalOrderInfo}/>\r\n                <Route path=\"/profile/orders/:id\" children={modalOrderInfo}/>\r\n            </>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    ADD_INGREDIENT_DATA,\r\n    DELETE_INGREDIENT_DATA,\r\n    INCREASE_INGREDIENT_COUNTER,\r\n    DECSEASE_INGREDIENT_COUNTER, TIngredientsActions,\r\n} from '../actions/ingredients';\r\nimport {TIngredient} from \"../../types\";\r\n\r\nexport type TIngredientsState = {\r\n    ingredients: Array<TIngredient>,\r\n    isLoadingIngredients: boolean,\r\n    hasErrorIngredients: boolean,\r\n    currentIngredient: TIngredient | null\r\n};\r\n\r\nexport const initialState: TIngredientsState = {\r\n    ingredients: [],\r\n    isLoadingIngredients: false,\r\n    hasErrorIngredients: false,\r\n    currentIngredient: null\r\n}\r\n\r\nexport const ingredients = (state = initialState, action: TIngredientsActions) => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {...state, isLoadingIngredients: true, hasErrorIngredients: false}\r\n        }\r\n\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return {...state, ingredients: action.ingredients, isLoadingIngredients: false}\r\n        }\r\n\r\n        case GET_INGREDIENTS_FAILED: {\r\n            return {...state, isLoadingIngredients: false, hasErrorIngredients: true}\r\n        }\r\n\r\n        case ADD_INGREDIENT_DATA: {\r\n            return {...state, currentIngredient: action.currentIngredient}\r\n        }\r\n\r\n        case DELETE_INGREDIENT_DATA: {\r\n            return {...state, currentIngredient: initialState.currentIngredient}\r\n        }\r\n\r\n        case INCREASE_INGREDIENT_COUNTER: {\r\n            let ingredient = action.ingredient;\r\n            let updatedIngredients = state.ingredients;\r\n\r\n            if (ingredient.type === \"bun\") {\r\n                updatedIngredients.forEach(item => {\r\n                    if (item.type === 'bun') {\r\n                        (item._id === ingredient._id) ? item.counter = 2 : item.counter = 0\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                let itemIndex = state.ingredients.findIndex(item => item._id === ingredient._id);\r\n                ingredient.counter ? ingredient = {...ingredient, counter: ingredient.counter + 1} : ingredient = {...ingredient, counter: 1};\r\n                updatedIngredients.splice(itemIndex, 1, ingredient);\r\n            }\r\n\r\n            return {...state, ingredients: updatedIngredients};\r\n        }\r\n\r\n        case DECSEASE_INGREDIENT_COUNTER: {\r\n            let updatedIngredients = state.ingredients;\r\n            let item = state.ingredients.find(item => item._id === action.ingredient._id);\r\n            let itemIndex = state.ingredients.findIndex(item => item._id === action.ingredient._id);\r\n            if (item) {\r\n                item.counter ? item = {...item, counter: item.counter - 1} : item = {...item, counter: 0};\r\n                updatedIngredients.splice(itemIndex, 1, item);\r\n            }\r\n\r\n            return {...state, ingredients: updatedIngredients};\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n","import {v4 as uuidv4} from \"uuid\";\r\n\r\nimport {\r\n    ADD_INGREDIENT_TO_BURGER,\r\n    CHANGE_INGREDIENT_IN_BURGER,\r\n    DELETE_INGREDIENT_FROM_BURGER,\r\n    GET_ORDER_NUMBER_FAILED,\r\n    GET_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS\r\n} from \"../actions/order\";\r\n\r\nimport {TOrderActions} from \"../actions/order\";\r\nimport {TIngredient} from \"../../types\";\r\n\r\ntype TOrder = {number: number, isLoadingOrderNumber: boolean, hasErrorOrderNumber: boolean};\r\n\r\ntype TCurrentBurger = {bun: TIngredient | null, main: Array<TIngredient>, total: number};\r\n\r\nexport type TOrderState = {\r\n    currentBurger: TCurrentBurger,\r\n    currentIngredient: TIngredient | null,\r\n    order: TOrder\r\n};\r\n\r\nexport const initialState: TOrderState = {\r\n    currentBurger: {bun: null, main: [], total: 0},\r\n    currentIngredient: null,\r\n    order: {number: 0, isLoadingOrderNumber: false, hasErrorOrderNumber: false}\r\n}\r\n\r\nexport const order = (state = initialState, action: TOrderActions) => {\r\n\r\n    switch (action.type) {\r\n        case GET_ORDER_NUMBER_REQUEST: {\r\n            return {...state, order: {...state.order, isLoadingOrderNumber: true, hasErrorOrderNumber: false}}\r\n        }\r\n\r\n        case GET_ORDER_NUMBER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                currentBurger: {...initialState.currentBurger, main: []},\r\n                order: {...state.order, number: action.orderNumber, isLoadingOrderNumber: false}\r\n            }\r\n        }\r\n\r\n        case GET_ORDER_NUMBER_FAILED: {\r\n            return {...state, order: {...state.order, isLoadingOrderNumber: false, hasErrorOrderNumber: true}}\r\n        }\r\n\r\n        case ADD_INGREDIENT_TO_BURGER: {\r\n            let ingredient = action.ingredient;\r\n            let newState = initialState;\r\n\r\n            if (ingredient.type === \"bun\") {\r\n                newState = {...state,\r\n                    currentBurger: {...state.currentBurger, bun: ingredient},\r\n                }\r\n            }\r\n            else\r\n            {\r\n                ingredient.key = uuidv4();\r\n                let updatedConstructor = state.currentBurger.main;\r\n                updatedConstructor.splice(action.ingredientIndex, 0, ingredient);\r\n\r\n                newState = {...state,\r\n                    currentBurger: {...state.currentBurger, main: updatedConstructor},\r\n                };\r\n            }\r\n\r\n            let total = 0;\r\n            if (newState.currentBurger.bun) {\r\n                newState.currentBurger.bun.price && (total = newState.currentBurger.bun.price * 2);\r\n            }\r\n            newState.currentBurger.main.forEach((item) => {\r\n                total += item.price\r\n            });\r\n            newState = {...newState, currentBurger: {...newState.currentBurger, total: total}}\r\n            return newState\r\n        }\r\n\r\n        case CHANGE_INGREDIENT_IN_BURGER: {\r\n            let updatedMain = state.currentBurger.main;\r\n            let item = updatedMain.splice(action.oldIndex, 1);\r\n            updatedMain.splice(action.currentIndex, 0, item[0]);\r\n\r\n            return {...state, currentBurger: {...state.currentBurger, main: updatedMain}};\r\n        }\r\n\r\n        case DELETE_INGREDIENT_FROM_BURGER: {\r\n            let newMain = state.currentBurger.main;\r\n            newMain.splice(action.ingredientIndex, 1);\r\n\r\n            let total = 0;\r\n            if (state.currentBurger.bun) {\r\n                state.currentBurger.bun.price && (total = state.currentBurger.bun.price * 2);\r\n            }\r\n            newMain.forEach((item) => {\r\n                total += item.price});\r\n\r\n            return {...state,\r\n                    currentBurger: {...state.currentBurger, main: newMain, total: total},\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILED} from \"../actions/auth\";\r\nimport {LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILED} from \"../actions/auth\";\r\nimport {REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILED} from \"../actions/auth\";\r\nimport {GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILED} from \"../actions/auth\";\r\nimport {SET_USER_REQUEST, SET_USER_SUCCESS, SET_USER_FAILED} from \"../actions/auth\";\r\nimport {REFRESH_TOKEN_REQUEST, REFRESH_TOKEN_SUCCESS, REFRESH_TOKEN_FAILED} from \"../actions/auth\";\r\nimport {RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILED} from \"../actions/auth\";\r\nimport {SET_NEW_PASSWORD_REQUEST, SET_NEW_PASSWORD_SUCCESS, SET_NEW_PASSWORD_FAILED} from \"../actions/auth\";\r\nimport {deleteCookie, setCookie} from \"../../utils/cookies\";\r\n\r\nimport type { TAuthActions } from '../actions/auth';\r\n\r\ntype TUser = {\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n};\r\ntype TAuthState = {\r\n    user: TUser,\r\n    isAuthenticated: boolean,\r\n    isLoading: boolean,\r\n    hasError: boolean,\r\n    tokenExpired: boolean\r\n}\r\n\r\nexport const initialState: TAuthState = {\r\n    user: {name: '', email: '', password: ''},\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    hasError: false,\r\n    tokenExpired: false\r\n}\r\n\r\nexport const auth = (state = initialState, action: TAuthActions): TAuthState => {\r\n\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false, isAuthenticated: false,}\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            if (action.data.accessToken) {\r\n                setCookie('token', action.data.accessToken.split('Bearer ')[1]);\r\n                setCookie('refreshToken', action.data.refreshToken);\r\n            }\r\n\r\n            return {...state, isLoading: false, isAuthenticated: true, user: action.data.user}\r\n        }\r\n        case LOGIN_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        case LOGOUT_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n            deleteCookie('token');\r\n            deleteCookie('refreshToken');\r\n\r\n            return {...state, isLoading: false, isAuthenticated: false, user: initialState.user}\r\n        }\r\n        case LOGOUT_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        case REGISTER_USER_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case REGISTER_USER_SUCCESS: {\r\n            if (action.data.accessToken) {\r\n                setCookie('token', action.data.accessToken.split('Bearer ')[1]);\r\n                setCookie('refreshToken', action.data.refreshToken);\r\n            }\r\n\r\n            return {...state, isLoading: false, isAuthenticated: true, user: action.data.user}\r\n        }\r\n        case REGISTER_USER_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        case GET_USER_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case GET_USER_SUCCESS: {\r\n            return {...state, isAuthenticated: true, isLoading: false, user: action.data.user}\r\n        }\r\n        case GET_USER_FAILED: {\r\n            return {...state, isLoading: false, hasError: true, tokenExpired: true};\r\n        }\r\n\r\n        case SET_USER_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case SET_USER_SUCCESS: {\r\n            return {...state, isLoading: false, user: action.data.user}\r\n        }\r\n        case SET_USER_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        case REFRESH_TOKEN_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case REFRESH_TOKEN_SUCCESS: {\r\n            if (action.data.accessToken) {\r\n                setCookie('token', action.data.accessToken.split('Bearer ')[1]);\r\n                setCookie('refreshToken', action.data.refreshToken);\r\n            }\r\n\r\n            return {...state, isLoading: false, tokenExpired: false}\r\n        }\r\n        case REFRESH_TOKEN_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        case RESET_PASSWORD_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case RESET_PASSWORD_SUCCESS: {\r\n            return {...state, isLoading: false}\r\n        }\r\n        case RESET_PASSWORD_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        case SET_NEW_PASSWORD_REQUEST: {\r\n            return {...state, isLoading: true, hasError: false}\r\n        }\r\n        case SET_NEW_PASSWORD_SUCCESS: {\r\n            return {...state, isLoading: false}\r\n        }\r\n        case SET_NEW_PASSWORD_FAILED: {\r\n            return {...state, isLoading: false, hasError: true};\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_GET_MESSAGE,\r\n    WS_CONNECTION_CLOSED,\r\n    TFeedActions\r\n} from \"../actions/feed\";\r\n\r\ntype TFeedState = {\r\n    orders: Array<any>,\r\n    total: number,\r\n    totalToday: number,\r\n    wsConnected: boolean,\r\n    messages: Array<any>,\r\n    error: string\r\n};\r\n\r\nexport const initialState: TFeedState = {\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0,\r\n    wsConnected:false,\r\n    messages: [],\r\n    error: ''\r\n}\r\n\r\nexport const feed = (state = initialState, action: TFeedActions): TFeedState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                wsConnected: true\r\n            };\r\n        }\r\n\r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                wsConnected: false\r\n            };\r\n\r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                wsConnected: false\r\n            };\r\n\r\n        case WS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                messages: state.messages.length\r\n                    ? [...state.messages, action.payload]\r\n                    : [action.payload],\r\n                orders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            };\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { ingredients } from \"./ingredients\";\r\nimport { order } from \"./order\";\r\nimport { auth } from \"./auth\";\r\nimport { feed } from \"./feed\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredients,\r\n    order: order,\r\n    auth: auth,\r\n    feed: feed\r\n});\r\n\r\nexport type TRootState = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {socketMiddleware} from \"./services/middleware/socketMiddleware\";\r\n\r\n// Подключаем Redux DevTools и хранилище\r\nimport {rootReducer, TRootState} from './services/reducers';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk, {ThunkMiddleware} from 'redux-thunk';\r\nimport {TFeedActions} from \"./services/actions/feed\";\r\nconst enhancer = composeWithDevTools(applyMiddleware(thunk, socketMiddleware()));\r\n// end Подключаем Redux DevTools\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE,\r\n    WS_CONNECTION_CLOSED,\r\n    TFeedActions\r\n} from \"../actions/feed\";\r\nimport {AppDispatch, AppThunk} from \"../../types\";\r\nimport {Middleware} from \"redux\";\r\nimport {TRootState} from \"../reducers\";\r\n\r\nexport const socketMiddleware = (): Middleware => {\r\n    return (store: { dispatch: AppDispatch }) => {\r\n\r\n        let socket: WebSocket | null = null;\r\n        return ((next: (arg0: TFeedActions) => void) => (action: TFeedActions) => {\r\n            const {dispatch} = store;\r\n            const {type, payload} = action;\r\n\r\n            if (type === WS_CONNECTION_START) {\r\n                if (socket) {\r\n                    socket.close(1000, 'reconnect needed');\r\n                }\r\n                if (!payload) {\r\n                    socket = new WebSocket('wss://norma.nomoreparties.space/orders/all');\r\n                }\r\n                else\r\n                {\r\n                    socket = new WebSocket(`wss://norma.nomoreparties.space/orders?token=${payload}`);\r\n                }\r\n            };\r\n\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({type: WS_CONNECTION_SUCCESS, payload: undefined});\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({type: WS_CONNECTION_ERROR, payload: event.toString()});\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    const parsedData = JSON.parse(event.data);\r\n                    dispatch({type: WS_GET_MESSAGE, payload: parsedData});\r\n                };\r\n\r\n                socket.onclose = event => {\r\n                    dispatch({type: WS_CONNECTION_CLOSED, payload: undefined});\r\n                };\r\n\r\n                if (type === WS_SEND_MESSAGE) {\r\n                    socket.send(JSON.stringify(payload));\r\n                }\r\n            }\r\n            next(action);\r\n        })\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"burger-constructor_itemList__1nrax\",\"emptyItems\":\"burger-constructor_emptyItems__2Tzzq\",\"mainItem\":\"burger-constructor_mainItem__1Qrfg\",\"bunItem\":\"burger-constructor_bunItem__1hQCw\",\"orderFooter\":\"burger-constructor_orderFooter__mJC8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuWrapper\":\"profile-menu_menuWrapper__10hlq\",\"profileMenu\":\"profile-menu_profileMenu__39xUA mb-20\",\"profileMenuItem\":\"profile-menu_profileMenuItem__2azjH\",\"link\":\"profile-menu_link__12i5k\",\"linkActive\":\"profile-menu_linkActive__3YnWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__2Vmi5\",\"mainDashboard\":\"app_mainDashboard__2I-_y\",\"sectionHeader\":\"app_sectionHeader__1mm4A\",\"sectionColumn\":\"app_sectionColumn__2URuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerWrapper\":\"feed-orders-status_containerWrapper__aLpZE mb-15\",\"statusContainer\":\"feed-orders-status_statusContainer__aN8OL\",\"ordersListOneColumn\":\"feed-orders-status_ordersListOneColumn__1Q0gr\",\"ordersListTwoColumn\":\"feed-orders-status_ordersListTwoColumn__OVkFd\",\"ordersWork\":\"feed-orders-status_ordersWork__2g50J\",\"ordersDone\":\"feed-orders-status_ordersDone__ZxD29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContent\":\"ingredient-details_bodyContent__1Kp23\",\"details\":\"ingredient-details_details__3hw-F mt-10\",\"secondaryText\":\"ingredient-details_secondaryText__ndjou text text_type_main-default\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-info_wrapper__2jCnJ\",\"ingredientsWrapper\":\"order-info_ingredientsWrapper__3YACJ\",\"ingredientWrapper\":\"order-info_ingredientWrapper__3cgdH\",\"ingredient\":\"order-info_ingredient__37anJ\",\"ordersDone\":\"order-info_ordersDone__q3GBf\",\"ingredientPreview\":\"order-info_ingredientPreview__393k_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__UL2PL\",\"profileWrapper\":\"profile_profileWrapper__3EAeK\",\"feedWrapper\":\"profile_feedWrapper__2xoIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3oldr\",\"wrapper\":\"login_wrapper__2Vyci\",\"inputContainer\":\"login_inputContainer__2QxM0 mb-6\",\"navLinks\":\"login_navLinks__DZraF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"register_container__2Kyfl\",\"wrapper\":\"register_wrapper__1ka0t\",\"inputContainer\":\"register_inputContainer__2g3q4 mb-6\",\"navLinks\":\"register_navLinks__1N0tu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"app-header_nav__2q0wn\",\"navItem\":\"app-header_navItem___qQNa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"reset-password_container__2yQWa\",\"wrapper\":\"reset-password_wrapper__3_zkA\",\"inputContainer\":\"reset-password_inputContainer__1VhgH mb-6\",\"navLinks\":\"reset-password_navLinks__3HvP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"profile-settings_inputContainer__oOfWA mb-6\",\"settingsWrapper\":\"profile-settings_settingsWrapper__2DOZJ ml-20\",\"buttonsBlock\":\"profile-settings_buttonsBlock__2WfNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"burger-ingredients_ingredients__3zdK8\",\"ingredientLink\":\"burger-ingredients_ingredientLink__2qMXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContent\":\"modal_modalContent__1vZRi p-5\",\"animatetop\":\"modal_animatetop__1rlbb\",\"close\":\"modal_close__224dW\",\"modalHeader\":\"modal_modalHeader__1KPtC pl-2 pr-2\",\"modalMain\":\"modal_modalMain__37WS9 text p-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forgot-password_container__1TB7b\",\"wrapper\":\"forgot-password_wrapper__fiEau\",\"inputContainer\":\"forgot-password_inputContainer__25TdR mb-6\",\"navLinks\":\"forgot-password_navLinks__i14gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"feed-order_order__3hRXV\",\"ordersList\":\"feed-order_ordersList__2PoXl\",\"orderHeader\":\"feed-order_orderHeader__2GQA3\",\"ingredientPreview\":\"feed-order_ingredientPreview__3xwWt\",\"ingredientPreviewMore\":\"feed-order_ingredientPreviewMore__3YOgR\",\"orderLink\":\"feed-order_orderLink__h3RLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found-404_container__3zHhO\",\"wrapper\":\"not-found-404_wrapper__I3lzT\",\"link\":\"not-found-404_link__XiyQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContent\":\"order-details_bodyContent__12o7Y\",\"secondaryText\":\"order-details_secondaryText__1NJz_ text text_type_main-default\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"feed_order__C8osY\",\"ordersList\":\"feed_ordersList__1D9v1\",\"orderHeader\":\"feed_orderHeader__1KDRB\",\"ingredientPreview\":\"feed_ingredientPreview__1altZ\",\"ingredientPreviewMore\":\"feed_ingredientPreviewMore__3Ziif\",\"orderLink\":\"feed_orderLink__22_rt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"profile-orders-feed_order__GA9bk\",\"ordersList\":\"profile-orders-feed_ordersList__cYtZb\",\"orderHeader\":\"profile-orders-feed_orderHeader__2DBFE\",\"ingredientPreview\":\"profile-orders-feed_ingredientPreview__shjCm\",\"ingredientPreviewMore\":\"profile-orders-feed_ingredientPreviewMore__1jF2D\",\"orderLink\":\"profile-orders-feed_orderLink__3kcPG\"};"],"sourceRoot":""}